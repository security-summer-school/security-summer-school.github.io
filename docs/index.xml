<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security Summer School â€“ Documentation</title><link>/docs/</link><description>Recent content in Documentation on Security Summer School</description><generator>Hugo -- gohugo.io</generator><atom:link href="/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Bed and Chair Metrics</title><link>/docs/tasks/beds/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/tasks/beds/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre>&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre>&lt;code>foo := &amp;quot;bar&amp;quot;;
bar := &amp;quot;foo&amp;quot;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre>&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item><item><title>Docs: Configuring Ponycopters</title><link>/docs/tasks/ponycopters/configuring-ponycopters/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/tasks/ponycopters/configuring-ponycopters/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre>&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre>&lt;code>foo := &amp;quot;bar&amp;quot;;
bar := &amp;quot;foo&amp;quot;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre>&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item><item><title>Docs: Launching Ponycopters</title><link>/docs/tasks/ponycopters/launching-ponycopters/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/tasks/ponycopters/launching-ponycopters/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre>&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre>&lt;code>foo := &amp;quot;bar&amp;quot;;
bar := &amp;quot;foo&amp;quot;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre>&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item><item><title>Docs: Multi-Bear Domicile Setup</title><link>/docs/tutorials/multi-bear/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/tutorials/multi-bear/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre>&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre>&lt;code>foo := &amp;quot;bar&amp;quot;;
bar := &amp;quot;foo&amp;quot;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre>&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item><item><title>Docs: Porridge Assessment</title><link>/docs/tasks/porridge/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/tasks/porridge/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre>&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre>&lt;code>foo := &amp;quot;bar&amp;quot;;
bar := &amp;quot;foo&amp;quot;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre>&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item><item><title>Docs: Another Task</title><link>/docs/tasks/task/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/tasks/task/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre>&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre>&lt;code>foo := &amp;quot;bar&amp;quot;;
bar := &amp;quot;foo&amp;quot;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre>&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item><item><title>Docs: Another Tutorial</title><link>/docs/tutorials/tutorial2/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/tutorials/tutorial2/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre>&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre>&lt;code>foo := &amp;quot;bar&amp;quot;;
bar := &amp;quot;foo&amp;quot;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre>&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item><item><title>Essentials:</title><link>/essentials/welcome-to-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/welcome-to-linux/</guid><description>
&lt;h1 id="welcome-to-linux">Welcome to Linux&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="#table-of-contents">Table of Contents&lt;/a>&lt;/li>
&lt;li>&lt;a href="#introduction">Introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="#prerequisites">Prerequisites&lt;/a>&lt;/li>
&lt;li>&lt;a href="#what-is-linux">What is Linux?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#setting-up-your-kali-virtual-machine">Setting up Your Kali Virtual Machine&lt;/a>&lt;/li>
&lt;li>&lt;a href="#working-with-linux">Working with Linux&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#i-command-thee">I Command Thee&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#the-prompt">The Prompt&lt;/a>&lt;/li>
&lt;li>&lt;a href="#the-file-system">The File System&lt;/a>&lt;/li>
&lt;li>&lt;a href="#traversing-the-file-system">Traversing the File System&lt;/a>&lt;/li>
&lt;li>&lt;a href="#be-a-man">Be a Man!&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ill-make-my-own-hierarchy">I&amp;rsquo;ll Make My Own Hierarchy!&lt;/a>&lt;/li>
&lt;li>&lt;a href="#absolute-or-relative">Absolute or Relative?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#inspecting-file-contents">Inspecting File Contents&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#the-root-user">The Root User&lt;/a>&lt;/li>
&lt;li>&lt;a href="#processes">Processes&lt;/a>&lt;/li>
&lt;li>&lt;a href="#scripts">Scripts&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#enter-python">Enter Python&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#the-basics">The Basics&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#variables">Variables&lt;/a>&lt;/li>
&lt;li>&lt;a href="#if-statements">If Statements&lt;/a>&lt;/li>
&lt;li>&lt;a href="#loops">Loops&lt;/a>&lt;/li>
&lt;li>&lt;a href="#functions">Functions&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#data-structures">Data Structures&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#lists">Lists&lt;/a>&lt;/li>
&lt;li>&lt;a href="#dictionaries">Dictionaries&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#working-with-files">Working with Files&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#strings-or-bytes">Strings or Bytes?&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#summary">Summary&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#linux">Linux&lt;/a>&lt;/li>
&lt;li>&lt;a href="#python">Python&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#activities">Activities&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#tutorial-in-your-face">Tutorial: In Your Face&lt;/a>&lt;/li>
&lt;li>&lt;a href="#challenge-did-you-look-everywhere">Challenge: Did You Look Everywhere?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#challenge-who-is-this-flag">Challenge: Who Is This Flag?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#challenge-whats-running">Challenge: What&amp;rsquo;s Running?&lt;/a>&lt;/li>
&lt;li>&lt;a href="#challenge-quick-mafs">Challenge: Quick Mafs&lt;/a>&lt;/li>
&lt;li>&lt;a href="#challenge-jumbled">Challenge: Jumbled&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#further-reading">Further Reading&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#more-terminal-tricks">More Terminal Tricks&lt;/a>&lt;/li>
&lt;li>&lt;a href="#altering-the-prompt">Altering the Prompt&lt;/a>&lt;/li>
&lt;li>&lt;a href="#alternatives-to-bash">Alternatives to Bash&lt;/a>&lt;/li>
&lt;li>&lt;a href="#hardcore-python">Hardcore Python&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this session, we will familiarise ourselves with our working environment.
We will learn how to set up a Kali Linux virtual machine and how to use its capabilities.
We will also introduce the programming language that we&amp;rsquo;ll use throughout all sessions: Python.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Fluency in the English language&lt;/li>
&lt;li>Basic programming knowledge (you are able to develop and run basic programs using integers, strings, arrays)&lt;/li>
&lt;li>The ability to use and search the Internet&lt;/li>
&lt;li>Curiosity, thirst for knowledge&lt;/li>
&lt;li>Interest in cybersecurity&lt;/li>
&lt;/ul>
&lt;h2 id="what-is-linux">What is Linux?&lt;/h2>
&lt;p>Well, &lt;a href="https://en.wikipedia.org/wiki/Linux">Linux&lt;/a> is family of operating systems (OS&amp;rsquo;s).
One such OS is &lt;a href="https://en.wikipedia.org/wiki/Kali_Linux">Kali Linux&lt;/a>, which is specially designed for security enthusiasts.
This means that Kali comes with a few hundred preinstalled apps that are useful for anywone working in or learning about security.
We&amp;rsquo;ll be using some of these apps throughout this track.&lt;/p>
&lt;h2 id="setting-up-your-kali-virtual-machine">Setting up Your Kali Virtual Machine&lt;/h2>
&lt;ol>
&lt;li>Start downloading the &lt;a href="https://security.cs.pub.ro/summer-school/wiki/_media/session/infrastructure/sss-kali-amd64.ova.torrent">Kali VM Image&lt;/a> torrent.&lt;/li>
&lt;li>Download the VirtualBox installer for your system from &lt;a href="https://www.virtualbox.org/wiki/Downloads">here&lt;/a>.&lt;/li>
&lt;li>Install VirtualBox using the installer you downloaded at step 2.&lt;/li>
&lt;li>Start VirtualBox.&lt;/li>
&lt;li>When the download started at step 1 finishes, press the &lt;strong>Import&lt;/strong> button.&lt;/li>
&lt;li>Select the downloaded &lt;code>.ova&lt;/code> file (the VM image) in the newly opened window.&lt;/li>
&lt;li>Click &lt;strong>Import&lt;/strong>.
You&amp;rsquo;ll be able to change the VM&amp;rsquo;s resources later.
After the import finishes, the VM should appear to the left of the VirtualBox window&lt;/li>
&lt;li>Click the VM and then click &lt;strong>Start&lt;/strong>.&lt;/li>
&lt;li>Use the username &lt;code>root&lt;/code> and the password &lt;code>toor&lt;/code> to log in.&lt;/li>
&lt;/ol>
&lt;h2 id="working-with-linux">Working with Linux&lt;/h2>
&lt;h3 id="i-command-thee">I Command Thee&lt;/h3>
&lt;p>The most important shortcut when using a Linux operating system is &lt;code>Ctrl + Alt + t&lt;/code>.
Try it now!
The dark box that has appeared is called a &lt;strong>terminal&lt;/strong>.
A terminal is a means by which we can tell the operating system what to do for us.
In other words, we use the terminal in order to give &lt;strong>commands&lt;/strong> to the operating system using a text interface, without the use of a mouse or fancy graphics.
Hence the terminal&amp;rsquo;s alternative name: the &lt;strong>Command Line Interface (CLI)&lt;/strong>.
What you&amp;rsquo;ve been using until now, namely navigating the desktop environment by clicking on shortcuts, files and links is called the &lt;strong>Graphical User Interface (GUI)&lt;/strong>.&lt;/p>
&lt;p>Here are a few useful key shortcuts for navigating the terminal more easily:&lt;/p>
&lt;ul>
&lt;li>open another terminal window: &lt;code>Shift + Alt + t&lt;/code>;&lt;/li>
&lt;li>navigate between open terminal windows: &lt;code>Alt + N&lt;/code>, where &lt;code>N&lt;/code> is the index of the tab you want to switch to &lt;strong>(starting from 1)&lt;/strong>;&lt;/li>
&lt;li>close the current window: &lt;code>Ctrl + d&lt;/code>;&lt;/li>
&lt;li>copy text from the terminal: &lt;code>Ctrl + Shift + c&lt;/code>;&lt;/li>
&lt;li>paste text to the terminal: &lt;code>Ctrl + Shift + v&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s kind of like a web browser, if you think about it, but with different key combinations.
Don&amp;rsquo;t worry about memorising them now, though.
You&amp;rsquo;ll get plenty of time to practice them in today&amp;rsquo;s activities and in the sessions to come.
For more terminal shortcuts, see the section &lt;a href="#more-terminal-shortcuts">More Terminal Shortcuts&lt;/a> below.&lt;/p>
&lt;h4 id="the-prompt">The Prompt&lt;/h4>
&lt;p>Note that the line begins with &lt;code>root@kali:~#&lt;/code>.
This is what is called a &lt;strong>prompt&lt;/strong>.
It&amp;rsquo;s like a sign that the current terminal is waiting for commands to execute.&lt;/p>
&lt;p>The format of the prompt is the following:&lt;/p>
&lt;pre>&lt;code>user@host_name: current_working_directory #
&lt;/code>&lt;/pre>&lt;p>Now let&amp;rsquo;s look at each of these components one by one.&lt;/p>
&lt;ul>
&lt;li>&lt;code>user&lt;/code> is the name of the current user.
In our case, it says &lt;code>root&lt;/code>.
We&amp;rsquo;ll see what this means in its dedicated &lt;a href="#the-root-user">section&lt;/a> below.
We chan check that the user truly is &lt;code>root&lt;/code> using the command &lt;code>whoami&lt;/code>:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>root@kali:~# whoami
root
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>host_name&lt;/code> is the name of the current system.
Once again, we can check if &lt;code>kali&lt;/code> truly is our hostname by running the command &lt;code>hostname&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>root@kali:~# hostname
kali
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>#&lt;/code> is a sign that tells us that the prompt is over and that you can start typing commands.
It can also be &lt;code>$&lt;/code> or &lt;code>&amp;gt;&lt;/code>.&lt;/li>
&lt;li>&lt;code>current_working_directory&lt;/code> is the &lt;strong>path&lt;/strong> in the file system where we are currently located.
If this sounds confusing, don&amp;rsquo;t worry.
We&amp;rsquo;ll explain the file hierarchy right now.&lt;/li>
&lt;/ul>
&lt;h4 id="the-file-system">The File System&lt;/h4>
&lt;p>One of the most important things when we&amp;rsquo;re using the CLI and after hacking a remote system is to know where we are in its file hierarchy.
This hierarchy is more commonly known as the &lt;strong>file system&lt;/strong>.
The path separator in Linux is &lt;code>/&lt;/code>, unlike Windows, where it&amp;rsquo;s &lt;code>\&lt;/code>.
At the same time, &lt;code>/&lt;/code> is the root of the file system.&lt;/p>
&lt;p>The file hierarchy looks like this:&lt;/p>
&lt;p>&lt;img src="./assets/sample_file_hierarchy.svg" alt="Sample File Hierarchy">&lt;/p>
&lt;p>Going back to the &lt;code>current_working_directory&lt;/code> in the prompt, the terminal can also be seen as a file walker.
This means that at each moment it is &amp;ldquo;placed&amp;rdquo; in a certain directory, i.e. at some point in the file hierarcy.
We can see that the prompt shows &lt;code>~&lt;/code>. This stands for &lt;strong>the home directory of the current user&lt;/strong>.
Our current user is &lt;code>root&lt;/code> and its home directory is &lt;code>/root&lt;/code>.
Let&amp;rsquo;s check this by running the command &lt;code>pwd&lt;/code> (print working directory):&lt;/p>
&lt;pre>&lt;code>root@kali:~# pwd
/root
&lt;/code>&lt;/pre>&lt;h4 id="traversing-the-file-system">Traversing the File System&lt;/h4>
&lt;p>Great!
So now we know &lt;strong>where&lt;/strong> we are in the file system.
Let&amp;rsquo;s see what&amp;rsquo;s here in &lt;code>/root&lt;/code>.
For this, we use &lt;code>ls&lt;/code>, that simply lists the contents of the current directory:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls
Desktop ghidra_9.1.2_PUBLIC peda %SystemDrive%
Documents libc-database Pictures Templates
Downloads Music Public Videos
&lt;/code>&lt;/pre>&lt;p>That&amp;rsquo;s quite a bit of stuff, but there&amp;rsquo;s no need to look into each of these now.
Let&amp;rsquo;s focus on navigating the file system for now.&lt;/p>
&lt;p>Almost every linux command, such as &lt;code>ls&lt;/code>, can take various parameters that alter its behaviour.
&lt;code>ls&lt;/code> for instance can list any given directory, not just the current directory.
This reqiures the use of the path to list as a parameter:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls / # list the contents of the / (root) directory
0 dev initrd.img lib32 lost+found proc sbin tmp vmlinuz
bin etc initrd.img.old lib64 media root srv usr vmlinuz.old
boot home lib libx32 opt run sys var
root@kali:~# ls /media # list the contents of the /media directory
cdrom cdrom0
&lt;/code>&lt;/pre>&lt;p>Notice the second &lt;code>#&lt;/code> symbol in each command.
This one is different from the one in the prompt.
It marks the beginning of a comment, just like &lt;code>//&lt;/code> does in C.&lt;/p>
&lt;p>So we can now see what a given directory contains, but we&amp;rsquo;re still stuck in &lt;code>/root&lt;/code>.
Let&amp;rsquo;s change our current directory. For this, we use &lt;code>cd&lt;/code>:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls libc-database/ # list the contents of libc-database
add common db dump find get identify README.md tmp
root@kali:~# cd libc-database/ # move to libc-database
root@kali:~/libc-database# ls # list the contetns of the current directory (now libc-database)
add common db dump find get identify README.md tmp
root@kali:~/libc-database# pwd # check that we really are in libc-database
/root/libc-database
&lt;/code>&lt;/pre>&lt;p>Notice the prompt change to &lt;code>~/libc-database&lt;/code> after &lt;code>cd&lt;/code> because the current directory changes.&lt;/p>
&lt;p>Stop!
&lt;strong>&lt;code>Tab&lt;/code> Time!&lt;/strong>
Almost every CLI is capable of autocompletion and that of Linux is no different.
Type &lt;code>cd l&lt;/code> and then press &lt;code>Tab&lt;/code>.
Notice that the rest of the directory&amp;rsquo;s name has been autofilled: &lt;code>cd libc-database/&lt;/code>.
Now type &lt;code>cd D&lt;/code> and press &lt;code>Tab&lt;/code> &lt;strong>twice&lt;/strong>.
Notice that 3 options have appeared.
What happened is that the terminal found 3 directories that start with &lt;code>D&lt;/code> and is asking you for more information.
Type &lt;code>e&lt;/code> and press &lt;code>Tab&lt;/code> once more.
Now the terminal sees there is only one option, &lt;code>Desktop/&lt;/code> and autofills it for you.&lt;/p>
&lt;p>&lt;code>Tab&lt;/code> allows you to use the terminal very efficiently.
It&amp;rsquo;s one of the most powerful tools at our disposal, so remember to abuse it as much as possible.
&lt;strong>Keep in mind: there is no such thing as pressing &lt;code>Tab&lt;/code> too many times&lt;/strong>.&lt;/p>
&lt;p>Now back to our directories.
So we&amp;rsquo;re in &lt;code>libc-database&lt;/code>, but how do we get back to &lt;code>/root&lt;/code>?
Similarly to a browser, the parent of any directory can be accessed using &lt;code>..&lt;/code> like so:&lt;/p>
&lt;pre>&lt;code>root@kali:~/libc-database# ls ..
Desktop ghidra_9.1.2_PUBLIC peda %SystemDrive%
Documents libc-database Pictures Templates
Downloads Music Public Videos
root@kali:~/libc-database# cd ..
root@kali:~# ls
Desktop ghidra_9.1.2_PUBLIC peda %SystemDrive%
Documents libc-database Pictures Templates
Downloads Music Public Videos
root@kali:~# pwd
/root
&lt;/code>&lt;/pre>&lt;p>Makes sense? Alright. So now we can move anywhere.
We can chain paths using the separator (&lt;code>/&lt;/code>), even adding &lt;code>..&lt;/code>, like so:&lt;/p>
&lt;pre>&lt;code>root@kali:~/libc-database# cd ../.. # we are in /root/libc-database
root@kali:/# ls # now we are 2 levels up, in /
0 dev initrd.img lib32 lost+found proc sbin tmp vmlinuz
bin etc initrd.img.old lib64 media root srv usr vmlinuz.old
boot home lib libx32 opt run sys var
&lt;/code>&lt;/pre>&lt;h4 id="be-a-man">Be a Man!&lt;/h4>
&lt;p>Almost every Linux command comes with extensive documentation.
This documentation can be read using &lt;code>man &amp;lt;command&amp;gt;&lt;/code>.
Let&amp;rsquo;s try reading the manual page for the &lt;code>ls&lt;/code> command:&lt;/p>
&lt;pre>&lt;code>root@kali:~# man ls
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Use &lt;code>â†‘&lt;/code> and &lt;code>â†“&lt;/code> to scroll up and down.&lt;/li>
&lt;li>Use &lt;code>Space&lt;/code> to scroll one whole page down.&lt;/li>
&lt;li>Use &lt;code>/&amp;lt;string&amp;gt;&lt;/code> to search for any string.
Try searching for the string &amp;ldquo;recursive&amp;rdquo;.
Use &lt;code>n&lt;/code> to navigate to the next occurrence of your string and &lt;code>Shfit + n&lt;/code> to navigate to the previous one.&lt;/li>
&lt;li>Use &lt;code>q&lt;/code> to quit the manual&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Task 1:&lt;/strong> Use the parameter you&amp;rsquo;ve just found to recurisively list the contents of the &lt;code>/root/libc-database&lt;/code> directory, using both relative and absolute paths.&lt;/p>
&lt;p>&lt;strong>Task 2:&lt;/strong> Use the man page for &lt;code>ls&lt;/code> again to learn how to view the contents of a directory in the form of a &lt;strong>long listing&lt;/strong>.
This parameter will show you more details regarding a file, such as its type, size, owner, access rights, the date when it was last modified etc.
Test it on the file &lt;code>/root/libc-database/README.md&lt;/code>&lt;/p>
&lt;p>&lt;strong>Task 3:&lt;/strong> Use the man page for &lt;code>ls&lt;/code> to find out what parameter to pass to &lt;code>ls&lt;/code> to list &lt;strong>all&lt;/strong> entries in a directory.
This option will also show you the &lt;strong>hidden&lt;/strong> files in that directory.
These files start with &lt;code>.&lt;/code>.
Test it on the &lt;code>~&lt;/code> directory.
Notice our friend &lt;code>..&lt;/code> is also present.&lt;/p>
&lt;h4 id="ill-make-my-own-hierarchy">I&amp;rsquo;ll Make My Own Hierarchy!&lt;/h4>
&lt;p>In order to create directories we use the &lt;code>mkdir&lt;/code> command:&lt;/p>
&lt;pre>&lt;code>root@kali:~# mkdir demo
root@kali:~# ls
demo Documents ghidra_9.1.2_PUBLIC Music Pictures %SystemDrive% Videos
Desktop Downloads libc-database peda Public Templates
root@kali:~# cd demo
root@kali:~/demo#
&lt;/code>&lt;/pre>&lt;p>Now let&amp;rsquo;s create a file in our new directory.
For this, we use the &lt;code>touch&lt;/code> command.
It creates an &lt;strong>empty&lt;/strong> file.&lt;/p>
&lt;pre>&lt;code>root@kali:~/demo# touch demo-file
root@kali:~/demo# ls
demo-file
root@kali:~/demo# cat demo-file # The file is empty, so nothing is printed.
root@kali:~/demo# touch demo-file2 # Just because we can.
root@kali:~/demo# ls
demo-file demo-file2
&lt;/code>&lt;/pre>&lt;p>In order to remove a file, we use the &lt;code>rm&lt;/code> command.&lt;/p>
&lt;pre>&lt;code>root@kali:~/demo# rm demo-file2
root@kali:~/demo# ls
demo-file
&lt;/code>&lt;/pre>&lt;p>Now let&amp;rsquo;s try to remove our directory the same way.&lt;/p>
&lt;pre>&lt;code>root@kali:~# rm demo
rm: cannot remove 'demo': Is a directory
&lt;/code>&lt;/pre>&lt;p>Deleting a directory requires that an extra parameter be passed to &lt;code>rm&lt;/code>.
Find it in &lt;code>rm&lt;/code>&amp;rsquo;s &lt;code>man&lt;/code> page.
Look for the string &amp;ldquo;recursively&amp;rdquo;.
Yup, it&amp;rsquo;s &lt;code>-r&lt;/code> (or &lt;code>-R&lt;/code>, or &lt;code>--recursive&lt;/code>; all three work).&lt;/p>
&lt;pre>&lt;code>root@kali:~# rm -r demo/
root@kali:~# ls
Desktop ghidra_9.1.2_PUBLIC peda %SystemDrive%
Documents libc-database Pictures Templates
Downloads Music Public Videos
&lt;/code>&lt;/pre>&lt;p>All clean!&lt;/p>
&lt;h4 id="absolute-or-relative">Absolute or Relative?&lt;/h4>
&lt;p>There are two ways of expressing a file path: relative and absolute.
&lt;strong>Relative&lt;/strong> paths are called so because they refer to the current directoy.&lt;/p>
&lt;pre>&lt;code>root@kali:~# cd libc-database/
&lt;/code>&lt;/pre>&lt;p>This command uses a &lt;strong>relative&lt;/strong> path, as &lt;code>libc-database&lt;/code> only exists in &lt;code>/root&lt;/code> (&lt;code>~&lt;/code>).
If we were to run it from &lt;code>/bin&lt;/code> for instance, it wouldn&amp;rsquo;t work because there is no &lt;code>libc-datbase&lt;/code> directory in &lt;code>/bin&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Absolute&lt;/strong> paths however can be used from anywhere in the filesystem.
They contain the full path to the file, starting from the root of the file system (&lt;code>/&lt;/code>):&lt;/p>
&lt;pre>&lt;code>root@kali:/lib/x86_64-linux-gnu/security# cd /root/libc-database/
root@kali:~/libc-database# pwd
/root/libc-database
&lt;/code>&lt;/pre>&lt;p>In the snippet above, we were able to navigate to &lt;code>/root/libc-database&lt;/code> from somewhere completely different in the hierarchy.&lt;/p>
&lt;p>Let&amp;rsquo;s get some practice:&lt;/p>
&lt;ul>
&lt;li>Navigate to &lt;code>/usr/lib/dpkg/methods/apt/&lt;/code>, but don&amp;rsquo;t just copy and paste this path.
Use &lt;code>Tab&lt;/code> and you&amp;rsquo;ll barely have to type anything.&lt;/li>
&lt;li>Now get back to &lt;code>root&lt;/code>&amp;rsquo;s home using the home directory shortcut.&lt;/li>
&lt;li>Navigate to &lt;code>~/ghidra_9.1.2_PUBLIC/docs/images&lt;/code> using its absolute path.&lt;/li>
&lt;li>Now move 2 levels up the hierarchy without retyping the path.
Use &lt;code>..&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h4 id="inspecting-file-contents">Inspecting File Contents&lt;/h4>
&lt;p>Up to this point, we&amp;rsquo;ve learned how to traverse the file system.
Now we need to be able to &lt;em>inspect&lt;/em> the files themselves.
The simplest ways to view the contents of a file in the terminal is the &lt;code>cat&lt;/code> command:&lt;/p>
&lt;pre>&lt;code>root@kali:~# cat /etc/hostname
kali
&lt;/code>&lt;/pre>&lt;p>As you&amp;rsquo;ve probably guessed, &lt;code>/etc/hostname&lt;/code> is the file where the machine&amp;rsquo;s host name is stored.&lt;/p>
&lt;p>Feel free to consult &lt;code>cat&lt;/code>&amp;rsquo;s man page for further details about the command.
We&amp;rsquo;ll introduce more advanced means of outputting the contents of a file in the session dedicated to &lt;a href="../data-representation">Data Representation&lt;/a>.
Stay tuned!&lt;/p>
&lt;h3 id="the-root-user">The Root User&lt;/h3>
&lt;p>As we said previously, the prompt may indicate the current user, in our case &lt;code>root&lt;/code>.
But what exactly is this user?
Well, Linux systems admit multiple levels of user privileges.
These privileges refer to the actions a certain user is allowed to perform, such as installing other apps or reading various files.&lt;/p>
&lt;p>But among all users, there is &lt;em>one to rule them all&lt;/em>: &lt;code>root&lt;/code>.
Similar to the &lt;code>Administrator&lt;/code> user in Windows, &lt;code>root&lt;/code> has no restrictions to the actions he may perform.
This is the default user in Kali Linux, so you don&amp;rsquo;t need to worry about permissions.
However, when logging into the remote servers we provide for some of the CTF challenges below, the user will be &lt;code>ctf&lt;/code> and it &lt;strong>does&lt;/strong> have limited permissions.&lt;/p>
&lt;h3 id="processes">Processes&lt;/h3>
&lt;p>Now that we&amp;rsquo;ve learned how to use the terminal, let&amp;rsquo;s take a look at the desktop.
A few common apps are pinned to the left taskbar.
Any application that is installed on a system is called a &lt;strong>program&lt;/strong>.
One such program is the web browser &lt;strong>Firefox&lt;/strong>
By clicking the Firefox icon, the &lt;strong>program&lt;/strong> starts to run.
Any running program is called a &lt;strong>process&lt;/strong>.&lt;/p>
&lt;p>Let&amp;rsquo;s test this by learning a new command.
With Firefox closed, run the command &lt;code>ps&lt;/code>.
Use &lt;code>man&lt;/code> to learn what it does.
If you use it as-is in the terminal, it displays two running processes: &lt;code>bash&lt;/code> and &lt;code>ps&lt;/code> itself:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ps
PID TTY TIME CMD
1929 pts/0 00:00:00 bash
3304 pts/0 00:00:00 ps
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>bash&lt;/code> stands for &lt;em>Bourne-Again Shell&lt;/em> and is the command interpreter used by the terminal.
In other words, it&amp;rsquo;s what reads your input and executes the commands you type.&lt;/li>
&lt;li>You already know what &lt;code>ps&lt;/code> is.
But why is it here? You see, in order for &lt;code>ps&lt;/code> to start scanning for what processes are running, it needs to be running itself, which means it&amp;rsquo;s inevitable that it finds itself while scanning.&lt;/li>
&lt;/ul>
&lt;p>Now open Firefox from the side bar and run &lt;code>ps&lt;/code> again:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ps
PID TTY TIME CMD
1929 pts/0 00:00:00 bash
3304 pts/0 00:00:00 ps
&lt;/code>&lt;/pre>&lt;p>Where is Firefox?
Well, when run without parameters, &lt;code>ps&lt;/code> displays the processes that are running &lt;strong>inside the current terminal&lt;/strong>, i.e. that have been started from this terminal.
Firefox was started from the GUI, so it has nothing to do with our terminal.
Use &lt;code>man&lt;/code> to learn how to list the &lt;strong>full&lt;/strong> output of &lt;strong>all&lt;/strong> processes in the system.&lt;/p>
&lt;p>Hopefully you haven&amp;rsquo;t cheated and did find the &lt;code>-A&lt;/code> (or &lt;code>-e&lt;/code>) and &lt;code>-f&lt;/code> options yourself.
Now the output is rather huge, but we only care about the final lines:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ps -A -f
[...]
root 3367 1612 50 15:54 ? 00:00:01 /usr/lib/firefox-esr/firefox-esr
root 3444 3367 20 15:54 ? 00:00:00 /usr/lib/firefox-esr/firefox-esr -contentproc -childID 1 -isForBrowser -prefsLen 1 -prefMapSize 183434 -parentBuildID 20200527211442 -greomni /usr/lib/firefox-esr/omni.ja -appomni /usr/l
root 3498 3367 14 15:54 ? 00:00:00 /usr/lib/firefox-esr/firefox-esr -contentproc -childID 2 -isForBrowser -prefsLen 5670 -prefMapSize 183434 -parentBuildID 20200527211442 -greomni /usr/lib/firefox-esr/omni.ja -appomni /us
root 3549 3367 35 15:54 ? 00:00:00 /usr/lib/firefox-esr/firefox-esr -contentproc -childID 3 -isForBrowser -prefsLen 6402 -prefMapSize 183434 -parentBuildID 20200527211442 -greomni /usr/lib/firefox-esr/omni.ja -appomni /us
root 3590 3367 10 15:54 ? 00:00:00 /usr/lib/firefox-esr/firefox-esr -contentproc -childID 4 -isForBrowser -prefsLen 6402 -prefMapSize 183434 -parentBuildID 20200527211442 -greomni /usr/lib/firefox-esr/omni.ja -appomni /us
root 3623 1929 0 15:54 pts/0 00:00:00 ps -A -f
&lt;/code>&lt;/pre>&lt;p>Great success!
We have seen Firefox move from being a simple program to being a running process.
In addition, we&amp;rsquo;ve learned a new command that is useful for inspecting what processes might be running on a system.
Once you hack into a remote system, you can use &lt;code>ps&lt;/code> to inspect what potentially exploitable processes are there.&lt;/p>
&lt;h3 id="scripts">Scripts&lt;/h3>
&lt;p>It is often convenient to group together a set of instrucitons so that you don&amp;rsquo;t have to type them separately each time you want to make use of their combined functionality.
For this purpose, you can use Bash scripts.
They are text files that simply contain Bash commands.
Bash is also a programming lanugage that comes with &lt;code>if&lt;/code> statements, &lt;code>for&lt;/code> loops, functions and more, but we won&amp;rsquo;t be needing those right now.&lt;/p>
&lt;p>Bash scripts typically bear the extension &lt;code>.sh&lt;/code>, but this is by no means mandatory.
Take some time to take a look at and run the Bash script in &lt;code>activities/demo-bash/demo.sh&lt;/code>.
You can run it like so:&lt;/p>
&lt;pre>&lt;code>root@kali:~/essentials/welcome-to-linux/activities/demo-bash# sh demo.sh
&lt;/code>&lt;/pre>&lt;h2 id="enter-python">Enter Python&lt;/h2>
&lt;h3 id="the-basics">The Basics&lt;/h3>
&lt;p>Python is a programming language designed with simplicty in mind.
It&amp;rsquo;s meant to be simple and fast to read, understand and write.
This is evident even from the language&amp;rsquo;s syntax.&lt;/p>
&lt;p>To get accustomed to Python, take a look at the code in the &lt;code>activities/demo-python&lt;/code> dierctory.
Feel free to fiddle with any of the code snippets.
Add your own, try things out and experiment!&lt;/p>
&lt;p>In order to run a Python script, just type the name of the script preceeded by &lt;code>python3&lt;/code>:&lt;/p>
&lt;pre>&lt;code>root@kali:~/essentials/welcome-to-linux/activities/demo-python# python3 variables.py
&lt;/code>&lt;/pre>&lt;h4 id="variables">Variables&lt;/h4>
&lt;p>Let&amp;rsquo;s start with &lt;a href="./activities/demo-python/variables.py">variables.py&lt;/a>.
This file explains how variables such as integers, floats and strings work in Python.
It also introduces the &lt;code>print&lt;/code> function.
Inspect and run the code.
Note that, unlike C code, in Python there is no need for a &lt;code>;&lt;/code> at the end of each line.&lt;/p>
&lt;h4 id="if-statements">If Statements&lt;/h4>
&lt;p>Now that we know how to create and print variables, let&amp;rsquo;s learn some more of the language&amp;rsquo;s syntax, starting with the &lt;code>if&lt;/code> keyword.
A typical &lt;code>if&lt;/code> statement looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># run some code&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice that there are no &lt;code>{}&lt;/code>, like you would use in C.
This is because Python relies on &lt;strong>indentation&lt;/strong> to determine which instructions make up the body of the &lt;code>if&lt;/code> statement and which don&amp;rsquo;t.
Moreover, a colon (&lt;code>:&lt;/code>) needs to be used after every &lt;code>if&lt;/code>, &lt;code>for&lt;/code> or function declaration, as we&amp;rsquo;ll see shortly.
To make things clearer, check out and run the code in &lt;code>activities/demo-python/if.py&lt;/code>.&lt;/p>
&lt;p>As stated above, this code would not work because the &lt;code>print&lt;/code> instruction is not correctly indented and the &lt;code>if&lt;/code> statement appears to have no body:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">a&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;This is an incorrect if statement. You will get an IndentationError.&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>But don&amp;rsquo;t take our word for granted.
Run this code too!&lt;/p>
&lt;h4 id="loops">Loops&lt;/h4>
&lt;p>Loops, be they &lt;code>for&lt;/code> or &lt;code>while&lt;/code> loops, use the same syntax as &lt;code>if&lt;/code> statements:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">var&lt;/span> &lt;span style="color:#204a87;font-weight:bold">in&lt;/span> &lt;span style="color:#000">set_of_objects&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># for body&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#000">condition&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># while body&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once again, note the usage of the &lt;code>:&lt;/code> after each loop declaration and the indentation of their bodies.&lt;/p>
&lt;p>The &lt;code>in&lt;/code> keyword present in the &lt;code>for&lt;/code> loop above signifies that the &lt;code>var&lt;/code> variable will act as an &lt;strong>iterator&lt;/strong>.
At every step of the loop, &lt;code>var&lt;/code> will be assigned to each consecutive element of the collection &lt;code>set_of_objects&lt;/code>.&lt;/p>
&lt;p>As before, take a look at, run and play with the code in &lt;code>activities/01-demo-python/loops.py&lt;/code> until you feel you get the hang of &lt;code>for&lt;/code>s and &lt;code>while&lt;/code>s.&lt;/p>
&lt;h4 id="functions">Functions&lt;/h4>
&lt;p>You&amp;rsquo;ve already seen the &lt;code>print&lt;/code>, &lt;code>range&lt;/code> and &lt;code>reversed&lt;/code> functions.
It is natural that we now try to create our own functions.
They follow the same syntax as before:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># As expected, the types of the parameters need not be specified.&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># But you can do it if you want/need to.&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">func&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">param1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">param2&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># function body&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can also specify a &lt;strong>default&lt;/strong> value that a parameter can take when none is specified:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">param1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">param2&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># param2 defaults to 5 when not specified&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># function body&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Both of these function calls are correct&lt;/span>
&lt;span style="color:#000">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;whatever&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># Here param2 = 5, by default&lt;/span>
&lt;span style="color:#000">foo&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;whatever&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>By now, you already know what to do.
The demo for Python functions is in &lt;code>activities/demo-python/functions.py&lt;/code>.
Go to town on it!&lt;/p>
&lt;h3 id="data-structures">Data Structures&lt;/h3>
&lt;p>Python comes equipped with builtin data structures, such as lists and dictionaries.&lt;/p>
&lt;h4 id="lists">Lists&lt;/h4>
&lt;p>Lists are indexed arrays that can store any type of data.
You can create a list by specifying its elements enclosed in &lt;code>[]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">lst&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;some string&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">True&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2.9&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Accessing the lists elements is similar to C: &lt;code>lst[0]&lt;/code>, &lt;code>lst[1]&lt;/code> and so on.
Yes, lists in Python are indexed from 0.&lt;/p>
&lt;p>Now go ahead and get some practice with lists by using the &lt;code>activities/demo-python/lists.py&lt;/code> script.&lt;/p>
&lt;h4 id="dictionaries">Dictionaries&lt;/h4>
&lt;p>Conceptually, dictionaries are mappings between a set of &lt;strong>keys&lt;/strong> and a set of &lt;strong>values&lt;/strong>.
This means that &lt;strong>each key&lt;/strong> is associated to &lt;strong>one value&lt;/strong>.
The opposite does not always hold true.
Thus, each &lt;strong>key&lt;/strong> in a dictionary is unique, but there is no such rule for &lt;strong>values&lt;/strong>.&lt;/p>
&lt;p>Let&amp;rsquo;s construct a dictionary and see what it does:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">my_dict&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;SSS&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Rullz&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;Essentials&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">True&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0.2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#0000cf;font-weight:bold">2.2&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">99&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you can see, neither the keys, nor the values in a dictionary need to be of the same type.&lt;/p>
&lt;p>In order to access the value associated to a key, the syntax is the following:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">my_dict&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;SSS&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># Will print &amp;#34;Rullz&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="working-with-files">Working with Files&lt;/h3>
&lt;p>Reading input from and writing output to is essential for any programmer.
We&amp;rsquo;ll make heavy use of this feature in the future.&lt;/p>
&lt;p>The main function for interacting with files is &lt;code>open&lt;/code>.
Its simplified signature is the following:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">open&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filename&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;rt&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>filename&lt;/code> parameter is self-evident.
The &lt;code>mode&lt;/code> however, answers the question: &amp;ldquo;What do you want to do with this file?&amp;rdquo;
The &lt;code>mode&lt;/code> parameter is a string, where each character has its own meaning.
The list of the most common characters is specified in &lt;a href="https://docs.python.org/3/library/functions.html#open">Python&amp;rsquo;s official documentation&lt;/a>.&lt;/p>
&lt;p>Use &lt;a href="https://docs.python.org">https://docs.python.org&lt;/a> whenever you need to look up some of Python&amp;rsquo;s features.
For a quick intro into handling files in Python, consult the &lt;code>activities/demo-python/files.py&lt;/code> script.
Run it, and then check the contents of the &lt;code>output.txt&lt;/code> file it creates.&lt;/p>
&lt;h4 id="strings-or-bytes">Strings or Bytes?&lt;/h4>
&lt;p>In the previous section, we saw how we can read &lt;strong>strings&lt;/strong> from and write them to files.
However, the more frequent way of interacting with files is by using &lt;strong>byte arrays&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>Byte arrays&lt;/strong> are very similar to strings, supporting nearly the same operations, but differ in representation.
While strings can also encode non-ASCII characters, such as &lt;code>Ã¤&lt;/code>, or even emoji, bytes are restricted to ASCII characters.
For this reason, one letter in a byte array is exactly one byte in size, whereas a letter in a string could use more space, depending on its encoding.
As a result, the main reason they exist is to process data, regardless of encoding.
Network packet data, binary file contents, images are all to be processed as bytes, not as strings.&lt;/p>
&lt;p>You can create a byte array just like you would create a regular string &lt;strong>and adding a &lt;code>b&lt;/code> in front&lt;/strong>, like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">my_bytes&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">b&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;SSS Rulz, but in bytes!&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As always, the demo &lt;code>activities/demo-python/strings_bytes.py&lt;/code> provides a more in-depth presentation of byte array and string operations.
Go take a look.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;h3 id="linux">Linux&lt;/h3>
&lt;p>A quick rundown of the most important Linux commands from today&amp;rsquo;s session is:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ls&lt;/code>: list the current directory;&lt;/li>
&lt;li>&lt;code>cd &amp;lt;direcory&amp;gt;&lt;/code>: move to the specified directory;&lt;/li>
&lt;li>&lt;code>mkdir&lt;/code> creates a new directory;&lt;/li>
&lt;li>&lt;code>touch&lt;/code> creates a new file;&lt;/li>
&lt;li>&lt;code>rm&lt;/code> deletes files and directories;&lt;/li>
&lt;li>&lt;code>whoami&lt;/code>: prints the current user;&lt;/li>
&lt;li>&lt;code>pwd&lt;/code>: prints the absolute path to the current directory;&lt;/li>
&lt;li>&lt;code>cat&lt;/code>: output the contents of a file;&lt;/li>
&lt;li>&lt;code>Tab&lt;/code>: your best friend in the whole world;&lt;/li>
&lt;li>&lt;code>man &amp;lt;command&amp;gt;&lt;/code>: the source of infinite wisdom.&lt;/li>
&lt;/ul>
&lt;h3 id="python">Python&lt;/h3>
&lt;p>Some concepts to remember about Python are:&lt;/p>
&lt;ul>
&lt;li>There is no need for a &lt;code>main&lt;/code> function or for types;&lt;/li>
&lt;li>Indentation is everything&lt;/li>
&lt;li>Basic arithmetic is almost the same as in C/C++;&lt;/li>
&lt;li>&lt;code>if&lt;/code>s, &lt;code>for&lt;/code>s, &lt;code>while&lt;/code>s and function declarations all end in a colon (&lt;code>:&lt;/code>);&lt;/li>
&lt;li>There&amp;rsquo;s a difference between bytes and strings and they are &lt;strong>not&lt;/strong> interchangeable.&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;p>Security Summer School most activities take the shape of &lt;strong>CTF challenges&lt;/strong>.
CTF stands for &amp;ldquo;Capture The Flag&amp;rdquo; and is a type of challenge where you are given access to an environment (a set of files, a website, a remote system etc.), which you have to use in order to obtain and submit a special string called &lt;strong>flag&lt;/strong>.
We use the &lt;a href="TODO:add-link">CyberEdu platform&lt;/a> for submitting flags.
For the Security Summer School, all flags follow this pattern:&lt;/p>
&lt;pre>&lt;code>SSS{some_random_ASCII_characters}
&lt;/code>&lt;/pre>&lt;h3 id="tutorial-in-your-face">Tutorial: In Your Face&lt;/h3>
&lt;p>The flag is literally in your face.&lt;/p>
&lt;p>Connect to the specified virtual machine and use &lt;code>ls&lt;/code> to explore your surroundings:&lt;/p>
&lt;pre>&lt;code>ctf@tutorial:~$ ls
flag
&lt;/code>&lt;/pre>&lt;p>Now just use &lt;code>cat&lt;/code> to extract the content of the &lt;code>flag&lt;/code> file.&lt;/p>
&lt;h3 id="challenge-did-you-look-everywhere">Challenge: Did You Look Everywhere?&lt;/h3>
&lt;p>We assure you the flag is somewhere in the &lt;code>/home/ctf&lt;/code> directory.&lt;/p>
&lt;h3 id="challenge-who-is-this-flag">Challenge: Who Is This Flag?&lt;/h3>
&lt;p>Is the user who he says he is?&lt;/p>
&lt;h3 id="challenge-whats-running">Challenge: What&amp;rsquo;s Running?&lt;/h3>
&lt;p>Did you know flags can &lt;strong>run&lt;/strong>?&lt;/p>
&lt;h3 id="challenge-quick-mafs">Challenge: Quick Mafs&lt;/h3>
&lt;p>The flag&amp;rsquo;s format is the classic &lt;code>SSS{...}&lt;/code>, where &lt;code>...&lt;/code> represent a string obtained by concatenating the &lt;strong>first 10 numbers&lt;/strong> obtained by using the formula below:&lt;/p>
&lt;pre>&lt;code>Let each number be n[i], where i is its index.
n[0] = 1337. This is your first number
n[i] = (n[i - 1]^3 * 67 + 31) % 2000, for all i &amp;gt; 0
&lt;/code>&lt;/pre>&lt;p>And, please, don&amp;rsquo;t compute the numbers manually.
You&amp;rsquo;ve just learned a cool new programming language that you can use!&lt;/p>
&lt;h3 id="challenge-jumbled">Challenge: Jumbled&lt;/h3>
&lt;p>The flag you&amp;rsquo;re given in &lt;code>activities/jumbled/public/flag&lt;/code> does contain the actual flag, but not quite.
Use your Python skills to reconstruct it.&lt;/p>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;h3 id="more-terminal-tricks">More Terminal Tricks&lt;/h3>
&lt;ul>
&lt;li>Use &lt;code>â†‘&lt;/code> and &lt;code>â†“&lt;/code> to navigate between your previous commands.&lt;/li>
&lt;li>Use &lt;code>Ctrl + r&lt;/code> to search for a previously issued command.&lt;/li>
&lt;li>Use &lt;code>Ctrl + A&lt;/code> to navigate to the beginning of the line.&lt;/li>
&lt;li>Use &lt;code>Ctrl + E&lt;/code> to navigate to the end of the line.&lt;/li>
&lt;li>Use &lt;code>Alt + B&lt;/code> to navigate one word to the left of the cursor.&lt;/li>
&lt;li>Use &lt;code>Alt + F&lt;/code> to navigate one word to the right of the cursor.&lt;/li>
&lt;li>Use &lt;code>Alt + Backspace&lt;/code> to delete one word to the left of the cursor.&lt;/li>
&lt;li>Use &lt;code>Ctrl + Delete&lt;/code> to delete one word to the right of the cursor.&lt;/li>
&lt;li>Use &lt;code>Ctrl + D&lt;/code> to close the current terminal.&lt;/li>
&lt;/ul>
&lt;h3 id="altering-the-prompt">Altering the Prompt&lt;/h3>
&lt;p>You can modify your prompt while keeping the same user and host name, by using the &lt;code>PS1&lt;/code> &lt;strong>environment variable&lt;/strong>.
Check out how you can do this &lt;a href="https://www.redhat.com/sysadmin/command-prompt-tell-me">here&lt;/a>.&lt;/p>
&lt;h3 id="alternatives-to-bash">Alternatives to Bash&lt;/h3>
&lt;p>There are quite a few alternatives to Bash, such as &lt;a href="https://ohmyz.sh/">zsh&lt;/a> and &lt;a href="http://manpages.ubuntu.com/manpages/trusty/man1/dash.1.html">DASH&lt;/a>.
Feel free to experiment with them in your free time.&lt;/p>
&lt;h3 id="hardcore-python">Hardcore Python&lt;/h3>
&lt;p>Python is well-known for being able to produce short code.
A part of this feature owes to its &lt;a href="https://www.datacamp.com/community/tutorials/python-list-comprehension?utm_source=adwords_ppc&amp;amp;utm_campaignid=1455363063&amp;amp;utm_adgroupid=65083631748&amp;amp;utm_device=c&amp;amp;utm_keyword=&amp;amp;utm_matchtype=b&amp;amp;utm_network=g&amp;amp;utm_adpostion=&amp;amp;utm_creative=278443377095&amp;amp;utm_targetid=aud-392016246653:dsa-486527602543&amp;amp;utm_loc_interest_ms=&amp;amp;utm_loc_physical_ms=1011795&amp;amp;gclid=CjwKCAjw64eJBhAGEiwABr9o2NXKuiirYa09rYT-hLIh7th5Exg3vj9YPnpAT7EszhE539X_9guv1RoCvhIQAvD_BwE">list comprehensions&lt;/a> and its &lt;a href="https://www.geeksforgeeks.org/python-string-join-method/">&lt;code>join&lt;/code> function&lt;/a>.&lt;/p>
&lt;p>If you want to learn even more, take a look at Python&amp;rsquo;s &lt;a href="https://docs.python.org/3/howto/functional.html#built-in-functions">builtin list operations&lt;/a>:
Learning about &lt;a href="https://towardsdatascience.com/lambda-functions-with-practical-examples-in-python-45934f3653a8">lambda functions&lt;/a> will surely ease your use of the above functions.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/system-exploration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/system-exploration/</guid><description>
&lt;h1 id="system-exploration">System Exploration&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="#table-of-contents">Table of Contents&lt;/a>&lt;/li>
&lt;li>&lt;a href="#introduction">Introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="#reminders-and-prerequisites">Reminders and Prerequisites&lt;/a>&lt;/li>
&lt;li>&lt;a href="#continuing-our-exploration">Continuing Our Exploration&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#tree-of-life">Tree of Life&lt;/a>&lt;/li>
&lt;li>&lt;a href="#find-your-way">Find Your Way&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#type">type&lt;/a>&lt;/li>
&lt;li>&lt;a href="#size">size&lt;/a>&lt;/li>
&lt;li>&lt;a href="#name">name&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#globbing">Globbing&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#-0-or-more-characters">*: 0 or more characters&lt;/a>&lt;/li>
&lt;li>&lt;a href="#-one-or-more-characters">+: one or more characters&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ranges">Ranges&lt;/a>&lt;/li>
&lt;li>&lt;a href="#sets">Sets&lt;/a>&lt;/li>
&lt;li>&lt;a href="#escaping">Escaping&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#redirecting-streams">Redirecting Streams&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#standard-input-stdin">Standard Input (stdin)&lt;/a>&lt;/li>
&lt;li>&lt;a href="#standard-output-stdout">Standard Output (stdout)&lt;/a>&lt;/li>
&lt;li>&lt;a href="#standard-error-stderr">Standard Error (stderr)&lt;/a>&lt;/li>
&lt;li>&lt;a href="#appending">Appending&lt;/a>&lt;/li>
&lt;li>&lt;a href="#pipes">Pipes&lt;/a>&lt;/li>
&lt;li>&lt;a href="#xargs">xargs&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#less-is-more">Less is More&lt;/a>&lt;/li>
&lt;li>&lt;a href="#grep">Grep&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#grep-a-file-hierarchy">Grep a File Hierarchy&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#inspecting-files">Inspecting Files&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#file">file&lt;/a>&lt;/li>
&lt;li>&lt;a href="#strings">strings&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#demo-doge">Demo: Doge&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#summary">Summary&lt;/a>&lt;/li>
&lt;li>&lt;a href="#activities">Activities&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#challenge-surgical-precision">Challenge: Surgical Precision&lt;/a>&lt;/li>
&lt;li>&lt;a href="#challenge-empty-files">Challenge: Empty Files&lt;/a>&lt;/li>
&lt;li>&lt;a href="#challenge-find-us-if-you-can">Challenge: Find Us If You Can&lt;/a>&lt;/li>
&lt;li>&lt;a href="#challenge-not-your-doge">Challenge: Not Your Doge&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#further-reading">Further Reading&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#forensics">Forensics&lt;/a>&lt;/li>
&lt;li>&lt;a href="#regular-expressions">Regular Expressions&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In the &lt;a href="../welcome-to-linux/index.md">previous session&lt;/a>, we introduced the Linux OS family via Kali Linux.
With its help, we learned about the terminal and about basic file navigation commands, such as &lt;code>ls&lt;/code>, &lt;code>cd&lt;/code>, &lt;code>mkdir&lt;/code>, &lt;code>rm&lt;/code>.
We also talked about processes and the &lt;code>ps&lt;/code> command.&lt;/p>
&lt;p>In today&amp;rsquo;s session, we&amp;rsquo;ll extend these concepts and learn some new commands, that we&amp;rsquo;ll use in order to further &lt;strong>explore&lt;/strong> our systems.
We won&amp;rsquo;t be learning any new Python tricks, but we&amp;rsquo;ll be using it for scripts none&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;p>For this session, you need to have a good understanding of last session&amp;rsquo;s Linux concepts:&lt;/p>
&lt;ul>
&lt;li>using the &lt;code>man&lt;/code> pages;&lt;/li>
&lt;li>using &lt;code>Tab&lt;/code>;&lt;/li>
&lt;li>navigating the file system;&lt;/li>
&lt;li>creating and deleting new entries in the file system.&lt;/li>
&lt;/ul>
&lt;p>Make sure you have rehearsed and practiced them before the beginning of today&amp;rsquo;s session.&lt;/p>
&lt;h2 id="continuing-our-exploration">Continuing Our Exploration&lt;/h2>
&lt;p>In the challenge &lt;a href="../welcome-to-linux/did-you-look-everywhere/">Did You Look Everywhere?&lt;/a> from the previous session, you had to &lt;strong>manually&lt;/strong> look for the &lt;code>.flag&lt;/code> file in the given hierarchy.
This, as you probably remember, was slow and frustrating.
We need some means by which to view &lt;strong>an entire hierarchy&lt;/strong> at once, or to look for specific files.&lt;/p>
&lt;p>Good news: such means do exist.&lt;/p>
&lt;h3 id="tree-of-life">Tree of Life&lt;/h3>
&lt;p>The &lt;code>tree&lt;/code> command does what its name suggests: it displays a tree representation of a directory hierarchy.&lt;/p>
&lt;pre>&lt;code>root@kali:~# tree /lib/cryptsetup/
/lib/cryptsetup/
â”œâ”€â”€ askpass
â”œâ”€â”€ checks
â”‚Â Â  â”œâ”€â”€ blkid
â”‚Â Â  â”œâ”€â”€ ext2
â”‚Â Â  â”œâ”€â”€ swap
â”‚Â Â  â”œâ”€â”€ un_blkid
â”‚Â Â  â””â”€â”€ xfs
â”œâ”€â”€ cryptdisks-functions
â”œâ”€â”€ functions
â””â”€â”€ scripts
â”œâ”€â”€ decrypt_derived
â”œâ”€â”€ decrypt_gnupg
â”œâ”€â”€ decrypt_gnupg-sc
â”œâ”€â”€ decrypt_keyctl
â”œâ”€â”€ decrypt_opensc
â”œâ”€â”€ decrypt_ssl
â””â”€â”€ passdev
&lt;/code>&lt;/pre>&lt;p>We can also specify a &lt;strong>maximum depth&lt;/strong> for &lt;code>tree&lt;/code>&amp;rsquo;s traversal.
Look up the parameter in &lt;code>tree&lt;/code>&amp;rsquo;s &lt;code>man&lt;/code> page.
Once you&amp;rsquo;ve found it, use it in order to set a maximum depth of 2 for the &lt;code>/opt&lt;/code> folder.
Your output should look like this:&lt;/p>
&lt;pre>&lt;code>root@kali:~# tree &amp;lt;add your paramtere here&amp;gt; /opt/
/opt/
â”œâ”€â”€ google
â”‚Â Â  â””â”€â”€ chrome
â””â”€â”€ Teeth
â”œâ”€â”€ cache
â”œâ”€â”€ etc
â”œâ”€â”€ housekeep
â”œâ”€â”€ README.txt
â”œâ”€â”€ static
â””â”€â”€ units
&lt;/code>&lt;/pre>&lt;p>Note that if you set the maximum depth to 1, &lt;code>tree&lt;/code> essentially becomes a fancier looking &lt;code>ls&lt;/code>.&lt;/p>
&lt;h3 id="find-your-way">Find Your Way&lt;/h3>
&lt;p>As far as exploration goes, &lt;code>tree&lt;/code> is a pretty strong tool.
It is capable of instantly displaying an entire file hierarchy.&lt;/p>
&lt;p>But sometimes we have to deal with a large hierarchy in which we know what we&amp;rsquo;re looking for.&lt;/p>
&lt;p>As an example, let&amp;rsquo;s look for the &lt;code>memc.h&lt;/code> header file of the Linux kernel.
It&amp;rsquo;s a small file that defines a tiny part of the communication between the GPU and RAM.
The header files corresponding to the version of your kernel are located in &lt;code>/usr/src/linux-headers-5.6.0-kali2-common&lt;/code>.
Now go look for &lt;code>memc.h&lt;/code>.
Good luck!
You should find it by&amp;hellip; &lt;em>tomorrow&lt;/em>.&lt;/p>
&lt;p>But don&amp;rsquo;t look for it manually.
This would be stupid.
You know what the name of the file is and you know the folder where to &lt;strong>find&lt;/strong> it.
That&amp;rsquo;s a lot of information already.
There is a Linux command that&amp;rsquo;s useful for looking for files with certain particularities (such as names, size, access rights etc.) in a file hierarchy.
Which is exactly what we need!
This command is called &lt;code>find&lt;/code>.
It outputs all files in a directory (and its subdirectories) that match some given properties.
Look up its syntax in the &lt;code>man&lt;/code> page.
Look for the string &amp;ldquo;EXAMPLES&amp;rdquo;.
It should lead you to a section at the end of the &lt;code>man&lt;/code> page, which gives you a series of detailed examples of the command&amp;rsquo;s usage.&lt;/p>
&lt;p>From them and from the commands general description at the beginning of the &lt;code>man&lt;/code> page, we can see that &lt;code>find&lt;/code> is generally used like this:&lt;/p>
&lt;pre>&lt;code>root@kali:~# find &amp;lt;where to look&amp;gt; &amp;lt;what to look for&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>&amp;lt;where to look&amp;gt;&lt;/code> is quite self-explanatory: it&amp;rsquo;s a path in the file system, from where &lt;code>find&lt;/code> will start to look for what whe told it.
This means that &lt;code>find&lt;/code> traverse the file system &lt;em>down&lt;/em> from the path it&amp;rsquo;s given by looking exhaustively into each of its directories.&lt;/li>
&lt;li>&lt;code>&amp;lt;what to look for&amp;gt;&lt;/code> is where things get more intersting.
We&amp;rsquo;ve already said that we can look for files that match certain properties, such as names, permissions, sizes, types and so on.
Each of these properties can be specified as follows:&lt;/li>
&lt;/ul>
&lt;p>&lt;code>find&lt;/code> can take many more parameters, as described below.&lt;/p>
&lt;h4 id="type">&lt;code>type&lt;/code>&lt;/h4>
&lt;p>This parameter allows us to select either regular files (&lt;code>-type f&lt;/code>), or directories (&lt;code>-type d&lt;/code>) and so on.
Here&amp;rsquo;s an example:&lt;/p>
&lt;pre>&lt;code>$ find /some/random/path -type d
&lt;/code>&lt;/pre>&lt;p>This command will list all subdirectories in &lt;code>/some/random/path&lt;/code>.&lt;/p>
&lt;h4 id="size">&lt;code>size&lt;/code>&lt;/h4>
&lt;p>Filters files by size.
For example, we can look for all files whose sizes are 100 bytes using this command&lt;/p>
&lt;pre>&lt;code>$ find /some/random/path -size 100c
&lt;/code>&lt;/pre>&lt;p>The &lt;code>c&lt;/code> at the end specifies that we&amp;rsquo;re using bytes as unit of measurement.
The size can also be specified in:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>kibibytes&lt;/strong> (1024 bytes) using the letter &lt;code>k&lt;/code>;&lt;/li>
&lt;li>&lt;strong>mebibytes&lt;/strong> (1024 kibibytes) using the letter &lt;code>M&lt;/code>;&lt;/li>
&lt;li>&lt;strong>gibibytes&lt;/strong> (1024 mebibytes) using the letter &lt;code>G&lt;/code>;&lt;/li>
&lt;/ul>
&lt;p>But looking for files with &lt;strong>exactly&lt;/strong> a given size seldom happens.
It is more often the case that we&amp;rsquo;re looking for files &lt;em>smaller&lt;/em> or &lt;em>larger&lt;/em> than some value.
For this reason, we may use the &lt;code>-&lt;/code> (smaller) or &lt;code>+&lt;/code> signs before the actual size, like this:&lt;/p>
&lt;pre>&lt;code>$ find /some/random/path -size +100k # Find all files with a size larger than 100kB.
&lt;/code>&lt;/pre>&lt;h4 id="name">&lt;code>name&lt;/code>&lt;/h4>
&lt;p>This is the simplest property.
It&amp;rsquo;s for when you&amp;rsquo;re looking for a file with a certain name.
For finding the file &lt;code>my_file&lt;/code>, it goes like this:&lt;/p>
&lt;pre>&lt;code>find /some/random/path -name my_file
&lt;/code>&lt;/pre>&lt;p>This parameter is the one we need for our current task.
In order to find the file &lt;code>memc.h&lt;/code>, we&amp;rsquo;ll run:&lt;/p>
&lt;pre>&lt;code>root@kali:~# find /usr/src/linux-headers-5.6.0-kali2-common/ -name memc.h
/usr/src/linux-headers-5.6.0-kali2-common/arch/arm/include/asm/hardware/memc.h
root@kali:~# cat /usr/src/linux-headers-5.6.0-kali2-common/arch/arm/include/asm/hardware/memc.h
/* SPDX-License-Identifier: GPL-2.0-only */
[...]
#endif
&lt;/code>&lt;/pre>&lt;h3 id="globbing">Globbing&lt;/h3>
&lt;p>But what if we only knew a portion of our filename?
Or what if we intentionally wanted to find all files ending in &lt;code>.log&lt;/code>, for instance?&lt;/p>
&lt;p>For this, we need to use the concept of &lt;strong>globbing&lt;/strong>.
This mechanism defines a set of special characters that are interpreted differently than regular ASCII text.&lt;/p>
&lt;h4 id="-0-or-more-characters">&lt;code>*&lt;/code>: 0 or more characters&lt;/h4>
&lt;p>The &lt;code>*&lt;/code> character is interpreted as any number of characters of any type.
Basically, &lt;code>*&lt;/code> stands for everything and nothing.
Take a look at the example below:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls D*
Desktop:
Documents:
Downloads:
&lt;/code>&lt;/pre>&lt;p>The &lt;code>*&lt;/code> makes &lt;code>ls&lt;/code>&amp;rsquo;s parameter &lt;strong>match&lt;/strong> any file name that starts with &lt;code>D&lt;/code>.
You can use &lt;code>*&lt;/code> anywhere in your parameter.
Moreover, any command that takes a file name as input accepts the globbing syntax.
Here&amp;rsquo;s another example:&lt;/p>
&lt;pre>&lt;code>root@kali:~# find /usr/src/linux-headers-5.6.0-kali2-common -name *group* # List all linux kernel header files whose names contain the word &amp;quot;group&amp;quot;
/usr/src/linux-headers-5.6.0-kali2-common/arch/s390/include/asm/ccwgroup.h
[...]
/usr/src/linux-headers-5.6.0-kali2-common/include/uapi/linux/cgroupstats.h
&lt;/code>&lt;/pre>&lt;p>The most commonly used globbing examples (apart from &lt;code>*&lt;/code>) are listed below.&lt;/p>
&lt;h4 id="-one-or-more-characters">&lt;code>+&lt;/code>: one or more characters&lt;/h4>
&lt;p>This symbol is very similar to &lt;code>*&lt;/code>.
However, &lt;code>+&lt;/code> needs at least one character in order to match the specific string.&lt;/p>
&lt;h4 id="ranges">Ranges&lt;/h4>
&lt;p>&lt;code>[]&lt;/code> represents a &lt;em>range&lt;/em>.
Let&amp;rsquo;s look at the following range: &lt;code>[a-f]&lt;/code>.
It starts at &lt;code>a&lt;/code> and ends with &lt;code>f&lt;/code>, inclusively.
&lt;code>[0-9]&lt;/code>, for example, matches any digit.
Likewise, &lt;code>[A-Z]&lt;/code> matches any capital leter, and so on.&lt;/p>
&lt;p>You can combine ranges.
For instance, &lt;code>[a-zA-Z]&lt;/code> matches any letter.&lt;/p>
&lt;h4 id="sets">Sets&lt;/h4>
&lt;p>In order to represent a set of characters to be matched, &lt;code>{}&lt;/code> are used.
&lt;code>{a,0,m,b}&lt;/code> matches &lt;em>either&lt;/em> &lt;code>a&lt;/code>, &lt;code>0&lt;/code>, &lt;code>m&lt;/code> or &lt;code>b&lt;/code>.&lt;/p>
&lt;h4 id="escaping">Escaping&lt;/h4>
&lt;p>What if we want to match the &lt;code>*&lt;/code> character itself?
Or any of the special characters above, such as &lt;code>+&lt;/code>, &lt;code>[&lt;/code>, &lt;code>]&lt;/code>, &lt;code>{&lt;/code> and &lt;code>}&lt;/code>?
Obviously, we can match &lt;strong>any&lt;/strong> character.
The special characters can be matched by &lt;strong>escaping&lt;/strong> them.&lt;/p>
&lt;p>Escaping is the practice of specifying that a symbol be interpreted as a regular character and not as part of a globbing expression.
This feature is achieved by placing a &lt;code>\&lt;/code> character before any special globbing character that you want to escape.
Here are a few examples:&lt;/p>
&lt;ul>
&lt;li>&lt;code>\*&lt;/code>: matches a literal &lt;code>*&lt;/code>;&lt;/li>
&lt;li>&lt;code>\[&lt;/code>: matches a literal &lt;code>[&lt;/code>;&lt;/li>
&lt;li>&lt;code>{\+,\}}&lt;/code>: matches either a literal &lt;code>+&lt;/code>, or a literal &lt;code>}&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>You can &lt;strong>combine&lt;/strong> escaped characters and globbing expressions as you please.&lt;/p>
&lt;h3 id="redirecting-streams">Redirecting Streams&lt;/h3>
&lt;p>Any process (remember that Linux commands are processes, too) uses 3 implicit data streams.&lt;/p>
&lt;h4 id="standard-input-stdin">Standard Input (&lt;code>stdin&lt;/code>)&lt;/h4>
&lt;p>This is the &amp;ldquo;place&amp;rdquo; from where the process reads its data.
Many processes read data from the keyboard:&lt;/p>
&lt;ul>
&lt;li>&lt;code>man&lt;/code>&amp;rsquo;s &lt;code>stdin&lt;/code> is the keyboard because it reads user commands and interprets them in order to navigate the current &lt;code>man&lt;/code> page.&lt;/li>
&lt;li>&lt;code>bash&lt;/code>&amp;rsquo;s &lt;code>stdin&lt;/code> is also the keyboard.
&lt;code>bash&lt;/code> reads user input, that is typed into the terminal and then executes those commands.&lt;/li>
&lt;/ul>
&lt;p>The main alternative to getting input from the terminal is using a file.
Strictly from a teaching standpoint, unless given a file, &lt;code>cat&lt;/code> reads its input from the terminal (kinda useless, we know).
Let&amp;rsquo;s showcase the usage of &lt;code>stdin&lt;/code> redirection.
First, let&amp;rsquo;s use &lt;code>cat&lt;/code> without redirection.&lt;/p>
&lt;pre>&lt;code>root@kali:~# cat # Read input from the terminal.
SSS Rulz!
SSS Rulz!
^C
root@kali:~# # We used Ctrl + C to close the above cat process.
&lt;/code>&lt;/pre>&lt;p>Now let&amp;rsquo;s redirect &lt;code>cat&lt;/code>&amp;rsquo;s input to a file.
We use &lt;code>&amp;lt;&lt;/code> in order to redirect &lt;code>stdin&lt;/code>.&lt;/p>
&lt;pre>&lt;code>root@kali:~# cat &amp;lt; essentials/README.md
# Security Summer School: Security Essentials Track
[...]
&lt;/code>&lt;/pre>&lt;p>Let&amp;rsquo;s look more closely at what happens here, as opposed to running &lt;code>cat essentials/README.md&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>cat essentials/README.md&lt;/code> makes the &lt;code>cat&lt;/code> command itself open the &lt;code>essentials/README.md&lt;/code> file and read bytes from it;&lt;/li>
&lt;li>&lt;code>cat &amp;lt; essentials/README.md&lt;/code> has &lt;strong>the underlying &lt;code>bash&lt;/code> process&lt;/strong> read the &lt;code>essentials/README.md&lt;/code> file and &lt;strong>feed its content&lt;/strong> to &lt;code>cat&lt;/code>, which is now reading input &lt;strong>from the underlying &lt;code>bash&lt;/code> process&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>The same output is printed, but the mechanism now differs entirely.&lt;/p>
&lt;h4 id="standard-output-stdout">Standard Output (&lt;code>stdout&lt;/code>)&lt;/h4>
&lt;p>&lt;code>stdout&lt;/code> is the complement of &lt;code>stdin&lt;/code>.
A processes output is generally displayed to &lt;code>stdout&lt;/code>.
Generally, this stream is also the terminal.
We&amp;rsquo;ve already seen this feature when running almost any command so far.&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls
Desktop essentials Music Public Videos
Documents ghidra_9.1.2_PUBLIC peda %SystemDrive%
Downloads libc-database Pictures Templates
&lt;/code>&lt;/pre>&lt;p>We&amp;rsquo;ve seen this output may times in the previous session.
The names of the directories and files inside the current folder are printed &lt;strong>to &lt;code>stdout&lt;/code>&lt;/strong>, i.e. to the terminal.&lt;/p>
&lt;p>Let&amp;rsquo;s redirect &lt;code>ls&lt;/code>&amp;rsquo;s output to a file:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls &amp;gt; ls_output
&lt;/code>&lt;/pre>&lt;p>Notice that now there is &lt;em>seemingly&lt;/em> no output.
In reality, it does exist, but is written by &lt;code>ls&lt;/code> to the &lt;code>ls_output&lt;/code> file instead of the standard &lt;code>stdout&lt;/code> stream (the terminal).&lt;/p>
&lt;pre>&lt;code>root@kali:~# cat ls_output # The same files as before. Their layout changes, though.
Desktop
Documents
Downloads
essentials
ghidra_9.1.2_PUBLIC
libc-database
Music
out
peda
Pictures
Public
%SystemDrive%
Templates
Videos
&lt;/code>&lt;/pre>&lt;h4 id="standard-error-stderr">Standard Error (&lt;code>stderr&lt;/code>)&lt;/h4>
&lt;p>Sometimes commands fail.
If you haven&amp;rsquo;t encountered one, you haven&amp;rsquo;t been using Linux for long enough.
Here&amp;rsquo;s a simple error:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls whatever
ls: cannot access 'whatever': No such file or directory
&lt;/code>&lt;/pre>&lt;p>The error message (&lt;code>ls: cannot access 'whatever': No such file or directory&lt;/code>) is displayed to the terminal, so it would make sense for it to be printed by &lt;code>ls&lt;/code> to &lt;code>stdout&lt;/code>, right?
Well&amp;hellip; no.
It&amp;rsquo;s printed to another stream, called &lt;code>stderr&lt;/code>.
As its name implies, this stream is dedicated to error messages.
This distinction was made in order for users to be able to separate between useful / legitimate output and sometimes unimportant error messages.&lt;/p>
&lt;p>Redirecting &lt;code>stderr&lt;/code> is performed using 2 characters: &lt;code>2&amp;gt;&lt;/code>.&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls whatever 2&amp;gt; ls_error
root@kali:~# # No error message. The error itself still did happen.
root@kali:~# cat ls_error # I told you so...
ls: cannot access 'whatever': No such file or directory
&lt;/code>&lt;/pre>&lt;h4 id="appending">Appending&lt;/h4>
&lt;p>Let&amp;rsquo;s redirect &lt;code>ls&lt;/code>&amp;rsquo;s output multiple times:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls essentials &amp;gt; out
root@kali:~# cat out
application-lifetime
assembly-language
binary-analysis
data-representation
data-security
explaining-the-internet
hacking-the-web
README.md
rediscovering-the-browser
system-exploration
taming-the-stack
welcome-to-linux
root@kali:~# ls &amp;gt; out
root@kali:~# cat out
Desktop
Documents
Downloads
essentials
ghidra_9.1.2_PUBLIC
libc-database
Music
out
peda
Pictures
Public
%SystemDrive%
Templates
Videos
&lt;/code>&lt;/pre>&lt;p>As you can see, when the second &lt;code>ls&lt;/code> output is written to the &lt;code>out&lt;/code> file, the first output is &lt;strong>overwritten&lt;/strong>.
This sucks in case we want to generate large output files, such as logs.&lt;/p>
&lt;p>But fear not!
Instead, remember last session&amp;rsquo;s Python crash course.
More specifically, remember &lt;code>open&lt;/code>&amp;rsquo;s parameters.
The second one was &lt;code>mode&lt;/code> and one of the modes is &lt;em>append&lt;/em>, symbolised by the &lt;code>a&lt;/code> character.
This mode makes any text that&amp;rsquo;s written to that specific file to be added at the end of whatever data was already inside it, without overwriting anything.&lt;/p>
&lt;p>We need something similar to that, which can be achieved by using &lt;code>&amp;gt;&amp;gt;&lt;/code> for redirecting &lt;code>stdin&lt;/code> and &lt;code>2&amp;gt;&amp;gt;&lt;/code> for redirecting &lt;code>stderr&lt;/code>.
Here&amp;rsquo;s how it works for the previous &lt;code>ls&lt;/code> commands:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ls essentials &amp;gt; out # This command also creates the out file. It is irrelevant whether we use &amp;gt; or &amp;gt;&amp;gt;.
root@kali:~# cat out
application-lifetime
assembly-language
binary-analysis
data-representation
data-security
explaining-the-internet
hacking-the-web
README.md
rediscovering-the-browser
system-exploration
taming-the-stack
welcome-to-linux
root@kali:~# ls &amp;gt;&amp;gt; out # This is where the overwriting took place. We've now changed command to use &amp;gt;&amp;gt;.
root@kali:~# cat out
application-lifetime
[...]
Videos
&lt;/code>&lt;/pre>&lt;p>Lovely!&lt;/p>
&lt;h4 id="pipes">Pipes&lt;/h4>
&lt;p>Up to now, we&amp;rsquo;ve looked at how to redirect the basic streams of a process to files.
But what if we wanted to redirect &lt;strong>one stream of a process into the stream of another process&lt;/strong>?
Of course we can do this, too, by using the &lt;strong>pipe&lt;/strong> (&lt;code>|&lt;/code>).&lt;/p>
&lt;p>To demonstrate the usage of pipes, we&amp;rsquo;ll introduces the &lt;code>tac&lt;/code> command.
Notice it&amp;rsquo;s &lt;code>cat&lt;/code> in reverse.
This is not arbitrary.
If &lt;code>cat&lt;/code> displays the &lt;strong>lines&lt;/strong> in a file &lt;strong>in order&lt;/strong>, &lt;code>tac&lt;/code> does the same, but &lt;strong>in reverse order&lt;/strong>.
Let&amp;rsquo;s exemplify using the global &lt;code>README.md&lt;/code>:&lt;/p>
&lt;pre>&lt;code>root@kali:~# tac essentials/README.md
1. [Taming the Stack](./taming-the-stack)
1. [Assembly Language](./assembly-language)
1. [Binary Analysis](./binary-analysis)
1. [Application Lifetime](./application-lifetime)
1. [Data Security](./data-security)
1. [Data Representation](./data-representation)
1. [Hacking the Web](./hacking-the-web)
1. [(Re)Discovering the Browser](./rediscovering-the-browser)
1. [Explaining the Internet](./explaining-the-internet)
1. [System Exploration](./system-exploration)
1. [Welcome to Linux](./welcome-to-linux)
Sessions are:
There, you will find a `README.md` file with the session documentation and, if it's the case, subfolders with support data for the challenges.
Each session is located in its specific folder.
Welcome to the Security Essentials Track of the Security Summer School.
# Security Summer School: Security Essentials Track
&lt;/code>&lt;/pre>&lt;p>Now let&amp;rsquo;s actually use a pipe.
We&amp;rsquo;ll also use a command from before, so we keep things simple.
Let&amp;rsquo;s find all Linux kernel header files whose names contain the word &amp;ldquo;group&amp;rdquo; and then print them &lt;strong>in reverse order&lt;/strong>:&lt;/p>
&lt;pre>&lt;code>find /usr/src/linux-headers-5.6.0-kali2-common -name *group* | tac
&lt;/code>&lt;/pre>&lt;p>Notice this output is the one you saw in section &lt;a href="#-0-or-more-characters">&lt;code>*&lt;/code>: 0 or more characters&lt;/a>, but in reverse.&lt;/p>
&lt;h4 id="xargs">&lt;code>xargs&lt;/code>&lt;/h4>
&lt;p>We&amp;rsquo;ve seen how powerful pipes are.
Remember that pipes redirect the &lt;code>stdout&lt;/code> of the first command into the second&amp;rsquo;s &lt;code>stdin&lt;/code>.
But what if we wanted to redirect the same &lt;code>stdout&lt;/code> as command line parameters for the second command?&lt;/p>
&lt;p>This is when we would use &lt;code>| xargs&lt;/code>.
Let&amp;rsquo;s assume this hypothetical command:&lt;/p>
&lt;pre>&lt;code>$ cmd1 | xargs cmd2
&lt;/code>&lt;/pre>&lt;p>where &lt;code>cmd1&lt;/code> and &lt;code>cmd2&lt;/code> are hypothetical commands.
The &lt;code>| xargs&lt;/code> keyword makes &lt;strong>every line&lt;/strong> from the &lt;code>stdout&lt;/code> of &lt;code>cmd1&lt;/code> be passed &lt;strong>as a separate parameter&lt;/strong> to &lt;code>cmd2&lt;/code>.&lt;/p>
&lt;p>A very powerful use case of &lt;code>xargs&lt;/code> is &lt;code>find ... | xargs grep ...&lt;/code>.
Such commands allow us to look for strings in all files that match certain criteria &lt;strong>at once&lt;/strong>.
Let&amp;rsquo;s showcase this by inspecting all log files about the &lt;code>systemd&lt;/code> process:&lt;/p>
&lt;pre>&lt;code># find /var/log -type f -name *log | xargs grep systemd
&lt;/code>&lt;/pre>&lt;h3 id="less-is-more">Less is More&lt;/h3>
&lt;p>Try running the following command:&lt;/p>
&lt;pre>&lt;code>root@kali:~# tree -L 2 /
&lt;/code>&lt;/pre>&lt;p>You can see that its output is rather huge.
For large directory hierarchies, &lt;code>tree&lt;/code>&amp;rsquo;s output can be overwhelming.
The same thing can happen when running &lt;code>find&lt;/code> commands.&lt;/p>
&lt;p>We&amp;rsquo;ve already seen how we can trim such outputs down by &lt;code>grep&lt;/code>ping them, but sometimes we have no criterion on which to do so.
In these situations, we have no alternative but to look at the entire output.
In order to do so in more easily, we can use the &lt;code>less&lt;/code> command.&lt;/p>
&lt;p>First of all, &lt;code>less&lt;/code> can be used just like you would use &lt;code>cat&lt;/code>.
Run the commands below.
You can navigate inside &lt;code>less&lt;/code> the same way you can navigate inside &lt;code>man&lt;/code>.
&lt;strong>And you definitely remember how to navigate inside &lt;code>man&lt;/code>!!!&lt;/strong>&lt;/p>
&lt;pre>&lt;code>root@kali:~# cat /var/log/syslog # Never ending logs...
[...]
root@kali:~# less /var/log/syslog # Much better.
&lt;/code>&lt;/pre>&lt;p>Inside &lt;code>less&lt;/code>, try searching for the string &amp;ldquo;network&amp;rdquo;.&lt;/p>
&lt;p>&lt;strong>Remember:&lt;/strong> Don&amp;rsquo;t scroll your terminal.
It doesn&amp;rsquo;t look cool.
Use &lt;code>less&lt;/code>!&lt;/p>
&lt;h3 id="grep">Grep&lt;/h3>
&lt;p>&lt;code>find&lt;/code> has taught us how to use various criteria in order to filter throigh a file hierarhcy.
This is definitely useful, but we can do better.
&lt;code>find&lt;/code> is highly capable of filtering output based on the files' &lt;strong>metadata&lt;/strong>, i.e. &amp;ldquo;surface level&amp;rdquo; information, such as sizes, names and so on.&lt;/p>
&lt;p>It would be really useful if we had a means to filter files &lt;strong>based on their content&lt;/strong>.
And we do!
This tool is called &lt;code>grep&lt;/code>.
&lt;code>grep&lt;/code> is capable of matching strings based on the contents of files, not just on their names.&lt;/p>
&lt;p>Let&amp;rsquo;s look for the &amp;ldquo;stdin&amp;rdquo; string in this README:&lt;/p>
&lt;pre>&lt;code>root@kali:~# grep &amp;quot;stdin&amp;quot; essentials/system-exploration/README.md
#### Standard Input (`stdin`)
- `man`'s `stdin` is the keyboard because it reads user commands and interprets them in order to navigate the current `man` page.
- `bash`'s `stdin` is also the keyboard.
Let's showcase the usage of `stdin` redirection.
We use `&amp;lt;` in order to redirect `stdin`.
`stdout` is the complement of `stdin`.
We need something similar to that, which can be achieved by using `&amp;gt;&amp;gt;` for redirecting `stdin` and `2&amp;gt;&amp;gt;` for redirecting `stderr`.
&lt;/code>&lt;/pre>&lt;p>As you can see, &lt;code>grep&lt;/code> outputs the &lt;strong>lines that contain the given string&lt;/strong>.
This makes &lt;code>grep&lt;/code> extremely useful for looking for CTF flags.
We simply need to &lt;code>grep &amp;quot;SSS&amp;quot;&lt;/code>.&lt;/p>
&lt;h4 id="grep-a-file-hierarchy">Grep a File Hierarchy&lt;/h4>
&lt;p>At this point, you may be tempted to believe that we can only &lt;code>grep&lt;/code> a single file.
Nope.
We can even &lt;code>grep&lt;/code> strings in entire file hierarchies, which is extremely powerful.&lt;/p>
&lt;p>Let&amp;rsquo;s &lt;code>grep&lt;/code> the &lt;code>task_struct&lt;/code> symbol in our kernel&amp;rsquo;s header files.
This symbol is a C &lt;code>struct&lt;/code> that contains all the information associated with any Linux process.&lt;/p>
&lt;pre>&lt;code>root@kali:~# grep -R &amp;quot;task_struct&amp;quot; /usr/src/linux-headers-5.6.0-kali2-common | less # The output is rather large, so we contain it with less.
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Remember this distinction:&lt;/strong> &lt;code>find&lt;/code> looks for file &lt;strong>metadata&lt;/strong> (names, permissions, size, type), while &lt;code>grep&lt;/code> looks for file &lt;strong>data&lt;/strong>.&lt;/p>
&lt;h2 id="inspecting-files">Inspecting Files&lt;/h2>
&lt;p>Now that we can find our way inside a file hierarchy, we need a means by which to inspect those files.
&lt;code>grep&lt;/code> works just fine, provided we&amp;rsquo;re dealing with text files.
But what if we aren&amp;rsquo;t?&lt;/p>
&lt;p>In this case, we&amp;rsquo;ll need to taka a sneak peak into some &lt;em>binary analysis&lt;/em>.
We&amp;rsquo;ll get back to this subject starting from from Session &lt;a href="../data-representation/index.md">Data Representation&lt;/a>.&lt;/p>
&lt;h3 id="file">&lt;code>file&lt;/code>&lt;/h3>
&lt;p>First, we want to get some more detailed information about what type of binary file we are dealing with specifically.
&lt;code>ls&lt;/code> already gives us information such as the file&amp;rsquo;s name, size and permissions.
This is all fine, but this information is common to all files. Whether we&amp;rsquo;re dealing with an image, or with an executable file &lt;code>ls&lt;/code> won&amp;rsquo;t tell us.&lt;/p>
&lt;p>But &lt;code>file&lt;/code> does.
&lt;code>file&lt;/code> works by reading a file&amp;rsquo;s header (the first few bytes at the beginning of the file, which hold information about its format and type).
Thus, it is capable of outputting more precise information than &lt;code>ls&lt;/code>.
Let&amp;rsquo;s test it using one of today&amp;rsquo;s challenges, &lt;code>activities/05-challenge_not-your-doge/public/not-doge.pnm&lt;/code>.&lt;/p>
&lt;pre>&lt;code>root@kali:~/essentials/system-exploration# file activities/05-challenge_not-your-doge/public/not-doge.pnm
activities/05-challenge_not-your-doge/public/not-doge.pnm: Netpbm image data, size = 500 x 590, rawbits, pixmap
&lt;/code>&lt;/pre>&lt;h3 id="strings">&lt;code>strings&lt;/code>&lt;/h3>
&lt;p>One of the most basic forms of binary analysis is to simply look for any human-readable string present in a binary file.
For this purpose, we&amp;rsquo;ll use the &lt;code>strings&lt;/code> command.&lt;/p>
&lt;h4 id="tutorial-doge">Tutorial: Doge&lt;/h4>
&lt;p>The best way to showcase the &lt;code>strings&lt;/code> command is to use it in order to find our first flag for today.
Head to the &lt;code>activities/doge/public&lt;/code> folder and take a look at the image you&amp;rsquo;ve been given.&lt;/p>
&lt;p>Since this section is dedicated to the &lt;code>strings&lt;/code> command, we&amp;rsquo;ll run this command on our &lt;code>doge.jpg&lt;/code> file:&lt;/p>
&lt;pre>&lt;code>root@kali:~/essentials/system-exploration/activities/doge/public# strings doge.jpg
JFIF
[...]
eP!_&amp;quot;
&lt;/code>&lt;/pre>&lt;p>So there are lots of human-readable strings in this image, but very few, if any, actually make any sense.
In order to filter them out, we&amp;rsquo;ll use what we&amp;rsquo;ve learned today: &lt;code>|&lt;/code> + &lt;code>grep&lt;/code>.
We&amp;rsquo;ll try to find the flag itself.
Maybe we get lucky.&lt;/p>
&lt;pre>&lt;code>root@kali:~/essentials/system-exploration/activities/doge/public# strings doge.jpg | grep SSS
SSS{grep_your_strings}
&lt;/code>&lt;/pre>&lt;p>That&amp;rsquo;s how you use &lt;code>strings&lt;/code>: often in combination with some filtering mechanism, such as &lt;code>grep&lt;/code>.&lt;/p>
&lt;p>Another way to get the flag is to run the &lt;code>file&lt;/code> command:&lt;/p>
&lt;pre>&lt;code>root@kali:~/essentials/system-exploration# file activities/doge/public/doge.jpg
activities/doge/public/doge.jpg: JPEG image data, JFIF standard 1.01, aspect ratio, density 1x1, segment length 16, comment: &amp;quot;SSS{grep_your_strings}&amp;quot;, progressive, precision 8, 500x500, components 3
&lt;/code>&lt;/pre>&lt;p>The flag is included in the file as a comment.
Image comments are often used in CTFs in order to hide some more subtle information, such as hints.
Always remember to check them out.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>Here are a few useful snippets from today&amp;rsquo;s session:&lt;/p>
&lt;ul>
&lt;li>&lt;code>grep -R &amp;quot;some string&amp;quot; /some/path&lt;/code>: recursively looks for &amp;ldquo;some string&amp;rdquo; inside all the files in the &lt;code>some/path&lt;/code> directory;&lt;/li>
&lt;li>&lt;code>find /some/path -name *flag* -type f&lt;/code>: recursively searches for regular files in the &lt;code>/some/path&lt;/code> directory, whose names include the word &lt;code>flag&lt;/code>;&lt;/li>
&lt;li>&lt;code>cat large_file | grep SSS&lt;/code>: looks for the &lt;code>SSS&lt;/code> string in a large file, so you don&amp;rsquo;t have to do this manually;&lt;/li>
&lt;li>&lt;code>find some/path &amp;lt;some criteria&amp;gt; | xargs grep SSS&lt;/code>: look for the &lt;code>SSS&lt;/code> string in each file that matches some specified criteria.&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;h3 id="challenge-surgical-precision">Challenge: Surgical Precision&lt;/h3>
&lt;p>There are many false flags out there.
Answer the questions and find the &lt;strong>real&lt;/strong> flags.
The quizzes cover subjects discussed today and during the previous session.
Think of them as a recap.&lt;/p>
&lt;p>The answer to each of the riddles in the files &lt;code>question-*&lt;/code> from the &lt;code>activities/surgical-precision/public&lt;/code> is the name of the flag you need to submit for that particular riddle.&lt;/p>
&lt;p>Beware of &lt;a href="https://en.wikipedia.org/wiki/Red_herring">red herrings&lt;/a>!&lt;/p>
&lt;h3 id="challenge-empty-files">Challenge: Empty Files&lt;/h3>
&lt;p>So many empty files&amp;hellip;
Nevertheless, you must find the flag!&lt;/p>
&lt;h3 id="challenge-find-us-if-you-can">Challenge: Find Us If You Can&lt;/h3>
&lt;p>This is a two-stage challenge.
The first flag is somewhere on the remote system.
Use the hint it comes with, in order to figure out the second flag as well.&lt;/p>
&lt;h3 id="challenge-not-your-doge">Challenge: Not Your Doge&lt;/h3>
&lt;p>The image is in &lt;code>.pnm&lt;/code> format.
It has a rather simple header, that you can find &lt;a href="https://en.wikipedia.org/wiki/Netpbm#PPM_example">here&lt;/a>(&lt;code>.pnm&lt;/code>s are almost the same as &lt;code>.ppm&lt;/code>s; it&amp;rsquo;s just the data encoding that differs).
But it&amp;rsquo;s incomplete.
Find a way to reveal it completely.&lt;/p>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;h2 id="forensics">Forensics&lt;/h2>
&lt;p>The greater CTF topic of today has been &lt;strong>forensics&lt;/strong>.
It&amp;rsquo;s probably one of the vastest and most diverse topics out there, because it doesn&amp;rsquo;t really fit into many patterns.
You can read more about forensics &lt;a href="https://trailofbits.github.io/ctf/forensics/">here&lt;/a>.&lt;/p>
&lt;h3 id="regular-expressions">Regular Expressions&lt;/h3>
&lt;p>Regular expressions are like globs on steroids.
They provide a huge step-up in terms of expressiveness.
As expected, they&amp;rsquo;re also more difficult to understand.&lt;/p>
&lt;p>By default, &lt;code>grep&lt;/code> actually matches regular expressions, not just raw strings.
&lt;code>find&lt;/code> can also look fore files matching regular expressions, by using the &lt;code>-regex&lt;/code> and &lt;code>-regextype&lt;/code> parameters (yes, there are multiple regex syntaxes).&lt;/p>
&lt;p>A good point from which to start learning how to use regular expressions are these resources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285">https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://regexone.com/">https://regexone.com/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>For testing your regular expressions before using them, &lt;a href="https://regex101.com/">this website&lt;/a> is king.&lt;/p>
&lt;p>Once you&amp;rsquo;ve got the hang of regular expressions, test your skills in the &lt;a href="https://regexcrossword.com/">Regex Crossword&lt;/a>.
Yes, such a thing really does exist and it&amp;rsquo;s as crazy as you might think.
Give it a try!&lt;/p>
&lt;p>Moreover, most programming languages have libraries for regular expressions.
Python can do so, too.
Take a look at its &lt;a href="https://docs.python.org/3/library/re.html">regex module&lt;/a>.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/explaining-the-internet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/explaining-the-internet/</guid><description>
&lt;h1 id="explaining-the-internet">Explaining the Internet&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;p>Use &lt;a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc&lt;/a>.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>In this session, we&amp;rsquo;ll discuss some networking fundamentals.
By doing so, we&amp;rsquo;ll lay the foundations for some of our later sessions regarding networking and the Internet, such as &lt;a href="../rediscovering-the-browser/index.md">(Re)Discovering the Browser&lt;/a>
and &lt;a href="../hacking-the-web">Hacking the Web&lt;/a>.&lt;/p>
&lt;p>Moreover, we&amp;rsquo;ll explain what happens when you access a URL (we&amp;rsquo;ll also learn how to do this from our terminals).
Last, but not least, we&amp;rsquo;ll see what those &lt;code>ssh&lt;/code> commands you&amp;rsquo;ve been using in order to solve the remote challenges mean.&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;p>For this session, you&amp;rsquo;ll need:&lt;/p>
&lt;ul>
&lt;li>a working internet connection;&lt;/li>
&lt;li>a Linux environment that you&amp;rsquo;re comfortable working with;&lt;/li>
&lt;li>to understand what a &lt;em>process&lt;/em> is;&lt;/li>
&lt;li>general knowledge of the Linux CLI, as discussed in session &lt;a href="../welcome-to-linux/index.md">Welcome to Linux&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="a-general-overview-of-the-internet">A General Overview of the Internet&lt;/h2>
&lt;p>Before learning how to use and, later, how to hack the Internet, let&amp;rsquo;s first understand its building blocks.
The Internet is all about sending data to and from an enormous amount of hosts.&lt;/p>
&lt;p>In order to learn how all of this works, let&amp;rsquo;s start from the example below.
It&amp;rsquo;s generic enough for it to be relatable to most networking scenarios.
Yet, it encompasses everything we need to talk about.&lt;/p>
&lt;p>&lt;img src="./assets/network_stack.png" alt="Network Stack">&lt;/p>
&lt;p>So what happens here is that the computer on the left is trying to &lt;strong>send&lt;/strong> data to the one on the right.
We call the left computer &lt;strong>the sender&lt;/strong> and the right one &lt;strong>the receiver&lt;/strong>.
The two computers are connected via a &lt;strong>medium&lt;/strong> on which the actual bits of data that make up the communication are sent.
In short, this medium is the connection between the aforementioned computers.&lt;/p>
&lt;p>However, there are 4 boxes above the aforementioned medium.
These boxes are altogether known as &lt;strong>The TCP/IP Network Stack&lt;/strong>.
We&amp;rsquo;ll see what&amp;rsquo;s with the &lt;em>TCP/IP&lt;/em> part soon enough.
Individually, each box is a &lt;strong>layer&lt;/strong>.
Here are the 4 layers of the TCP/IP stack:&lt;/p>
&lt;p>&lt;img src="./assets/tcp_ip_network_stack.svg" alt="The TCP/IP Network Stack">&lt;/p>
&lt;p>Each layer makes a well-defined set of requirements, which are fulfilled by &lt;strong>protocols&lt;/strong>.
A networking protocol is a set of rules that define the communication (data formatting and processing) between the same two levels of the network stack.
For example, there are protocols for the transport layer, others for the link layer and so on.
We&amp;rsquo;ll talk about them in a bit.&lt;/p>
&lt;h3 id="encapsulation">Encapsulation&lt;/h3>
&lt;p>Each layer takes care of a specific requirement of networking, as we&amp;rsquo;ll discuss shortly.
When sending data, each of the layers in the TCP/IP model accepts data from the layer above (or from a program in the case of the application layer), and adds additional information to the data that is necessary for that layer to carry out its task.
In some cases, the original data may be processed in some way before the additional information is added, i.e. it might be encrypted.
The layer then passes this data on to the layer below (or onto the transmission media in the case of the link layer).&lt;/p>
&lt;p>The arrival of data from an upper layer may trigger additional separate messages to be sent to the receiving end.
For instance, if the data needed to be encrypted, the layer that carries out the encryption has to exchange initial setup messages with the receiving end to agree the encryption method and other data that we&amp;rsquo;ll touch on in the session &lt;a href="../data-security/index.md">Data Security&lt;/a>, before the encrypted data can be transferred.&lt;/p>
&lt;p>At the receiving end, the process happens in reverse: each layer accepts data from the layer below, inspects and removes the additional information added on by the corresponding layer in the sending end, before passing it up to the layer above.&lt;/p>
&lt;p>Data is passed from a process on the sender to a process on the receiver by using the services of the layer below.
It is only the final layer that actually causes the data to be transmitted onto the transmission media (e.g. cable). Below is a representation of this whole mechanism.&lt;/p>
&lt;p>&lt;img src="./assets/network_layers.png" alt="General Workings of a Network Stack Layer">&lt;/p>
&lt;p>This method of modular communication is called &lt;strong>encapsulation&lt;/strong>.
It can be likened to taking the data from the layer above and placing it in an &lt;strong>envelope&lt;/strong>, writing some additional information on the envelope, then passing the envelope to the layer below.
At the receiving end, a layer is passed an envelope from the layer below.
It looks at the data on the outside of the envelope to decide what to do with the contents of the envelope.
It then opens the envelope and passes the contained data up to the next level. The reverse of encapsulation is &lt;strong>decapsulation&lt;/strong>.
After a message has passed through the network stack, it ends up in a &lt;em>matrioshka&lt;/em> of envelopes, one for each layer, each with its own, specific information.&lt;/p>
&lt;h3 id="a-bit-of-nomenclature">A Bit of Nomenclature&lt;/h3>
&lt;p>As we said previously, each of the layers of the TCP/IP model adds its own information to the data coming from the layer above.
This encapsulation at each layer results in a new structure effectively wrapping up the original data.
Each of these has a specific name depending on the layer that creates it:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">TCP/IP Layer&lt;/th>
&lt;th style="text-align:center">Name of data block produced by the layer&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">Application&lt;/td>
&lt;td style="text-align:center">Application data (e.g. HTTP, HTTPS)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Transport&lt;/td>
&lt;td style="text-align:center">Segments (TCP) or datagrams (UDP)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Internet&lt;/td>
&lt;td style="text-align:center">Packets (e.g IP packet)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">Link&lt;/td>
&lt;td style="text-align:center">Frames (e.g. Ethernet frame)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="the-medium">The Medium&lt;/h2>
&lt;p>This layer is not mentioned in the above diagrams, but is worth mentioning.
The medium represents the connection itself between the 2 staions.
This connection can be:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>wired&lt;/strong>: using a cable on which digital signals that encode the bits are sent;&lt;/li>
&lt;li>&lt;strong>wireless&lt;/strong>: using high-frequency radio waves in order to send the same signals as before&lt;/li>
&lt;/ul>
&lt;h2 id="the-link-layer">The Link Layer&lt;/h2>
&lt;p>This layer is also known as the &lt;strong>Data Link&lt;/strong> layer.&lt;/p>
&lt;p>It represents the underlying technology of any application.
The device on which the application is running may have a choice of many technologies to connect to a network, such as Ethernet, WiFi, Bluetooth, 4G, 5G etc.
Where more than one link exists, the operating system of the device chooses the most appropriate link, e.g. a mobile phone might be connected to both 4G and WiFi.
However, in some cases the application itself may dictate the choice of link, e.g. the mobile phone may decide to send traffic over WiFi to avoid 4G data charges.
Once the link has been chosen, the appropriate link layer protocol is selected.&lt;/p>
&lt;p>The most commonly used link layer protocol is &lt;strong>Ethernet&lt;/strong>.
Wired or wireless Ethernet is used on most local area networks (LANs).
The packets from the internet layer are further encapsulated in Ethernet frames which are designed to be transported across a local network.&lt;/p>
&lt;p>This layer needs a means to identify local stations.
This is where the &lt;strong>Media Access Control (MAC) addresses&lt;/strong> come in.
They are 48 bits long and are unique to a specific &lt;strong>Network Interface Card (NIC)&lt;/strong>.
The MAC address is physically tied to the hardware of the computer, which means it may also be referred to as the hardware or physical address.&lt;/p>
&lt;h2 id="the-internet-layer">The Internet Layer&lt;/h2>
&lt;p>So each NIC has its own 48-bit MAC address.
This means there are &lt;code>2^48&lt;/code> unique MACs, which means &lt;code>2^48&lt;/code> unique NICs.
&lt;code>2^48&lt;/code> is a huge number, which is way beyond everything humanity has produced so far.
So, since we aren&amp;rsquo;t likely to run out of MAC addresses any time soon, a host can be easily identified in the Internet via its MAC, right?
Yes, it can.&lt;/p>
&lt;p>There is one problem, though.
Suppose the sender is in the US and the receiver is in India.
There&amp;rsquo;s no way you can connect these two hosts using the same medium.
You need some intermediaries: &lt;strong>routers&lt;/strong>.&lt;/p>
&lt;h3 id="routers">Routers&lt;/h3>
&lt;p>A router is a networking device that connects two or more networks.
Think of the router you most probably have at home.
There is a &lt;em>local network&lt;/em>, to which you can connect via WiFi, or Ethernet cables.
You&amp;rsquo;re probably doing this right now.
Another network is the one provided by your Internet Service Provider (ISP).&lt;/p>
&lt;p>There are many ISPs around the world and even more local home networks.
The web thus becomes a &lt;em>web of routers&lt;/em> who transmit &lt;strong>packets&lt;/strong> from one network to another.
Back to our example above, you will surely need many routers to get a packet from the US to India.&lt;/p>
&lt;p>But how does a router know how where to send a packet?
Let&amp;rsquo;s say a router R1 connects 3 networks, as shown below.
A packet comes from TODO&lt;/p>
&lt;p>&lt;img src="./assets/router_in_action.png" alt="TODO: Router in Action">&lt;/p>
&lt;p>In order to visualise the hops that our requests to a well-known service, such as &lt;code>google.com&lt;/code>, we use the &lt;code>traceroute&lt;/code> command:&lt;/p>
&lt;pre>&lt;code>root@kali:~# traceroute google.com
traceroute to google.com (142.250.185.206), 30 hops max, 60 byte packets
1 _gateway (10.0.2.2) 0.212 ms 0.123 ms 0.228 ms
2 10.20.21.254 (10.20.21.254) 2.815 ms 3.908 ms 3.838 ms
3 109.101.201.49 (109.101.201.49) 4.894 ms 4.971 ms 4.810 ms
4 193.231.103.0 (193.231.103.0) 9.634 ms 9.467 ms 9.359 ms
5 10.0.241.109 (10.0.241.109) 8.547 ms 9.129 ms 9.958 ms
6 * * *
7 10.0.240.194 (10.0.240.194) 59.356 ms 39.555 ms 10.0.200.6 (10.0.200.6) 39.579 ms
8 10.0.240.121 (10.0.240.121) 39.426 ms 39.373 ms 38.338 ms
9 92.87.30.10 (92.87.30.10) 42.521 ms 39.938 ms 41.795 ms
10 * 10.252.185.126 (10.252.185.126) 40.778 ms *
11 142.250.226.148 (142.250.226.148) 38.924 ms 172.253.73.152 (172.253.73.152) 41.083 ms 108.170.252.1 (108.170.252.1) 42.216 ms
12 142.250.225.77 (142.250.225.77) 39.563 ms 108.170.252.18 (108.170.252.18) 40.317 ms 142.250.225.77 (142.250.225.77) 36.148 ms
13 fra16s52-in-f14.1e100.net (142.250.185.206) 40.195 ms 209.85.242.79 (209.85.242.79) 39.355 ms 108.170.236.249 (108.170.236.249) 38.919 ms
&lt;/code>&lt;/pre>&lt;p>Let&amp;rsquo;s explain the output.
Each line represents a &lt;strong>hop&lt;/strong> (i.e. a router) that a packet must pass through in order to reach &lt;code>google.com&lt;/code>.
The first number is the index of the hop.
The second is the &lt;em>IP&lt;/em> of the network.
You&amp;rsquo;ve probably heard about IPs before.
We&amp;rsquo;ll demystify them in a bit.
&lt;code>traceroute&lt;/code> sends 3 packets, for consistency.
It counts the time it takes from sending each of these packets to the moment the response reaches the sender.
This time called &lt;strong>Round Trip Time (RTT)&lt;/strong>.
As we said, &lt;code>traceroute&lt;/code> sends and monitors 3 packets in order to display the consistency of the link to each hop.&lt;/p>
&lt;p>The first hop is between the VM and the host.
The other is the router to which the host is connected.
From then on, it&amp;rsquo;s whe wild Internet itself.&lt;/p>
&lt;h3 id="ip-addresses">IP Addresses&lt;/h3>
&lt;p>IP addresses or, in short, &lt;strong>IPs&lt;/strong>, are 32-bit (i.e. 4 bytes) numbers used to identify &lt;strong>hosts&lt;/strong>.
IP stands for &lt;strong>Internet Protocol&lt;/strong>, which is the most widely used internet layer protocol.
Notice the difference between IPs and MACs.
While MACs are associated with NICs, IPs are associated with hosts.
Another difference is that whereas a MAC is unique to and engraved into the NIC, a host can change its IP more easily.
We won&amp;rsquo;t go into this in today&amp;rsquo;s session, but you can read about one such mechanism called &lt;a href="#dhcp">DHCP&lt;/a>.&lt;/p>
&lt;p>Of course you are free to express an IP address however you like, but by far the most common representation is to write each of its 4 bytes individually, in the decimal base, separated by a dot (&lt;code>.&lt;/code>).
You&amp;rsquo;ve already seen IP&amp;rsquo;s when connecting to the remote hosts during the previous sessions.
Some IPs are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>8.8.8.8&lt;/code>: is the address of Google&amp;rsquo;s Public DNS Service.
We&amp;rsquo;ll explain what the DNS is in a future &lt;a href="#the-dns">section&lt;/a>.&lt;/li>
&lt;li>&lt;code>69.63.176.13&lt;/code>: is a common IP address used by Facebook&lt;/li>
&lt;li>&lt;code>141.85.224.100&lt;/code>: is IP the address of one of the machines in our CTF infrastructure&lt;/li>
&lt;/ul>
&lt;p>In order to see the IP of your machine, run the following command:&lt;/p>
&lt;pre>&lt;code>root@kali:~# ip address show
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
inet 127.0.0.1/8 scope host lo
valid_lft forever preferred_lft forever
inet6 ::1/128 scope host
valid_lft forever preferred_lft forever
2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
link/ether 08:00:27:3c:2a:8d brd ff:ff:ff:ff:ff:ff
inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic noprefixroute eth0
valid_lft 86379sec preferred_lft 86379sec
inet6 fe80::262a:29ff:8129:db77/64 scope link noprefixroute
valid_lft forever preferred_lft forever
&lt;/code>&lt;/pre>&lt;p>Your output may differ slightly.&lt;/p>
&lt;p>An IP address is associated with a &lt;strong>network interface&lt;/strong>.
These interfaces can be virtual or physical (present on your NIC).
In your Kali VM, all interfaces are virtual.&lt;/p>
&lt;p>&lt;strong>&lt;code>lo&lt;/code>&lt;/strong> is the &lt;strong>loopback&lt;/strong> interface.
It&amp;rsquo;s an internal interface that each host possesses.
Its purpose is for testing the OS&amp;rsquo;s TCP/IP stack.
Its IP is, by convention &lt;code>127.0.0.1&lt;/code>, or &lt;code>0.0.0.0&lt;/code>.&lt;/p>
&lt;p>&lt;strong>&lt;code>eth0&lt;/code>&lt;/strong> is the interface used to connect to the Internet.
It acts as a middleman between your host OS (the one in which you&amp;rsquo;re running the VM) and the guest OS (Kali).
Its status is &lt;em>UP&lt;/em> (i.e. it&amp;rsquo;s running) and its IP address is &lt;code>10.0.2.15&lt;/code>.&lt;/p>
&lt;h4 id="ping">&lt;code>ping&lt;/code>&lt;/h4>
&lt;p>In order to test whether a host is up or down, we can &lt;code>ping&lt;/code> its IP.
&lt;code>ping&lt;/code> sends packets to the given host (IP or website) and reports whether the host responds or not.
If it responds, it&amp;rsquo;s obviously alive.
Otherwise&amp;hellip; it&amp;rsquo;s complicated.
It can either be dead itself, &lt;strong>or there can be no route to it&lt;/strong>.
If we consider that the connection between us and our pinged host is &lt;em>mediated&lt;/em> by a chain of routers, as shown in the image above, if &lt;strong>one&lt;/strong> of those routers is down and doesn&amp;rsquo;t transmit packets, then we may be unable to reach the pinged host.
So a better wording is to say that when a host doesn&amp;rsquo;t respond to pings, it&amp;rsquo;s not necessarily &lt;em>down&lt;/em>, but merely &lt;strong>unreachable&lt;/strong>.
From a host&amp;rsquo;s point of view though, it&amp;rsquo;s irrelevant whether a host is down for real or not.
An unreachable host is as good as a dead one: &lt;em>useless&lt;/em>.&lt;/p>
&lt;p>&lt;code>localhost&lt;/code>, in other words. the &lt;code>lo&lt;/code> interface, should &lt;strong>always&lt;/strong> be up and respond to pings.
In case it doesn&amp;rsquo;t, well&amp;hellip; your kernel&amp;rsquo;s TCP/IP stack may be broken.
Sad reacts only.&lt;/p>
&lt;pre>&lt;code>root@kali:~# ping -c 3 127.0.0.1
PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.040 ms
64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.060 ms
64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.046 ms
--- 127.0.0.1 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2053ms
rtt min/avg/max/mdev = 0.040/0.048/0.060/0.008 ms
&lt;/code>&lt;/pre>&lt;p>&lt;code>ping&lt;/code> also tells us the RTT to the pinged host.
Notice the very small times when pinging ourselves.
This makes sense, since there are no hops (routers) between a host and itself.&lt;/p>
&lt;p>Now let&amp;rsquo;s ping a remote server, say &lt;code>google.com&lt;/code>.
We can &lt;code>ping&lt;/code> either an IP or a URL.&lt;/p>
&lt;pre>&lt;code>root@kali:~# ping -c 3 google.com
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=63 time=39.0 ms
64 bytes from 8.8.8.8: icmp_seq=2 ttl=63 time=50.1 ms
64 bytes from 8.8.8.8: icmp_seq=3 ttl=63 time=44.6 ms
--- 8.8.8.8 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2003ms
rtt min/avg/max/mdev = 39.031/44.556/50.078/4.509 ms
&lt;/code>&lt;/pre>&lt;p>Now the RTTs are longer, because of the routing taking place between our VM and &lt;code>google.com&lt;/code>.
The more routers on the way, the longer the RTT.&lt;/p>
&lt;h3 id="urls">URLs&lt;/h3>
&lt;p>In the above &lt;code>ping&lt;/code> command, we used &lt;code>google.com&lt;/code> instead of an IP.
But what exactly are strings such as &lt;code>https://www.youtube.com&lt;/code> or &lt;code>https://www.google.com&lt;/code>?&lt;/p>
&lt;p>&lt;strong>Uniform Resource Locators (URLs)&lt;/strong> are exactly what their name implies: addresses to given resources on the Web.
This means that each URL can point to &lt;em>at most&lt;/em> one resource (some URLs are invalid and, thus, point to no resources).
Such resources can be HTML pages, images, videos and many others.&lt;/p>
&lt;p>Here are some examples of URLs:&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://security-summer-school.github.io&lt;/code>&lt;/li>
&lt;li>&lt;code>https://github.com/security-summer-school/essentials/blob/master/explaining-the-internet/README.md&lt;/code>&lt;/li>
&lt;li>&lt;code>https://www.google.com/search?q=security+summer+school&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>You&amp;rsquo;ve probably figured out that these URLs look somewhat similar.
They all start with &lt;code>https://&lt;/code>, they look like paths in the file system, separated by &lt;code>/&lt;/code>, they use some special characters such as &lt;code>?&lt;/code> and &lt;code>+&lt;/code>.
In the next section, we&amp;rsquo;ll explain all of these components.&lt;/p>
&lt;h4 id="anatomy-of-a-url">Anatomy of a URL&lt;/h4>
&lt;p>The image below summarises the building blocks of a URL&lt;/p>
&lt;p>&lt;img src="./assets/url_anatomy.png" alt="Anatomy of a URL">&lt;/p>
&lt;p>Let&amp;rsquo;s disect these components:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>The scheme&lt;/strong> (sometimes called &lt;em>schema&lt;/em>) indicates the application layer protocol that the browser must use to request the resource.
Usually, for websites, the protocol is HTTP (unsecured) or HTTPS (secured).
We&amp;rsquo;ll get into the details of HTTP in the &lt;a href="../rediscovering-the-browser/index.md">next session&lt;/a>.
Other schemes include &lt;code>ftp&lt;/code> (File Transfer Protocol), &lt;code>git&lt;/code>, &lt;code>mailto&lt;/code> etc.&lt;/li>
&lt;li>&lt;strong>The authority&lt;/strong> is separated from the scheme by the characters &lt;code>://&lt;/code>
It includes both the domain (in our case: &lt;code>www.example.com&lt;/code>) and the port (&lt;code>80&lt;/code>), separated by a colon:
&lt;ul>
&lt;li>&lt;strong>The domain&lt;/strong> indicates which Web server is being requested.
Usually this is a domain name, but an IP address may also be used (as you&amp;rsquo;ve seen when solving our challenges).&lt;/li>
&lt;li>&lt;strong>The port&lt;/strong> indicates the technical &lt;em>gate&lt;/em> used to access the resources on the web server.
It is usually omitted if the web server uses the standard ports of the HTTP protocol (80 for HTTP and 443 for HTTPS) to grant access to its resources.
We&amp;rsquo;ll explain this concept in further detail in the &lt;a href="#the-transport-layer">Transport Layer&lt;/a> section.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>The path&lt;/strong> to the resource was, in the early days of the Internet, a physical file location on the web server.
Nowadays, it is mostly an abstraction handled by web servers without any mandatory physical reality.&lt;/li>
&lt;li>&lt;strong>The parameters&lt;/strong> are like function parameters, but they are passed to the web server itself.
Those parameters are a list of key - value pairs separated with the &lt;code>&amp;amp;&lt;/code> symbol.
The web server can use those parameters to do extra stuff before returning the resource.
Each web server has its own rules regarding parameters.
Once again, we&amp;rsquo;ll learn more about these parameters, more commonly known as &lt;strong>query parameters&lt;/strong> in the &lt;a href="../rediscovering-the-browser/index.md">next session&lt;/a>.&lt;/li>
&lt;li>&lt;strong>The anchor&lt;/strong>, also known as &lt;strong>fragment&lt;/strong>, is like a &lt;em>bookmark&lt;/em> to some specific part of the resource.
It gives the browser directions to show the content located at that &lt;em>bookmarked&lt;/em> spot.
On an HTML document, for example, the browser will scroll to the point where the anchor is defined; on a video or audio document, the browser will try to go to the time the anchor represents.
Markdown documents also use anchors, like so: &lt;a href="https://github.com/security-summer-school/essentials/tree/master/explaining-the-internet#anatomy-of-a-url">https://github.com/security-summer-school/essentials/tree/master/explaining-the-internet#anatomy-of-a-url&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>You might have heard the same things being called &lt;em>Uniform Resource Identifiers (URIs)&lt;/em>.
This is correct, but it&amp;rsquo;s not the most precise name you can use.
In order to understand the difference between URLs and URIs, check out their &lt;a href="#url-vs-uri">corresponding section&lt;/a>.&lt;/p>
&lt;p>We&amp;rsquo;ll see how URLs are translated into IPs by a naming system called the &lt;strong>Domanin Name System (DNS)&lt;/strong>.&lt;/p>
&lt;h3 id="the-domain-name-system">The Domain Name System&lt;/h3>
&lt;p>Remember: IPs, &lt;strong>not URLs&lt;/strong>, are what&amp;rsquo;s used to identify hosts (web servers included) in the Internet.
So there needs to be a service by which the URLs we&amp;rsquo;ve just learned about are mapped to IPs.
This service is called the DNS.
It organises URLs in a hierarchical manner, in order to rapidly respond to queries.
You can think of the DNS as being similar to a &lt;strong>phonebook of the Internet&lt;/strong>.&lt;/p>
&lt;p>Here&amp;rsquo;s how all of this works.
When you type &lt;code>security-summer-school.github.io&lt;/code> into your browser, it sends a query over the Internet in order to find the website associated with the URL &lt;code>security-summer-school.github.io&lt;/code>.
A query is a question asking to look up the domain name and respond the corresponding IP address.
Let&amp;rsquo;s follow the path of this question across the Internet.&lt;/p>
&lt;h4 id="the-recursive-resolver">The Recursive Resolver&lt;/h4>
&lt;p>The first server that the query interacts with is what&amp;rsquo;s called the &lt;strong>recursive resolver&lt;/strong>.
This resolver is often operated by your ISP.
It is a database of other DNS servers, which asks it forwards the same question: &amp;ldquo;What is the IP of &lt;code>security-summer-school.github.io&lt;/code>?&amp;rdquo;&lt;/p>
&lt;h4 id="the-root-server">The Root Server&lt;/h4>
&lt;p>The first DNS server that the recursive resolver talks to is the &lt;strong>root server&lt;/strong>.
These servers are responsible for translating &lt;em>top-level domains&lt;/em>, such as &lt;code>.io&lt;/code>, &lt;code>.com&lt;/code>, &lt;code>.net&lt;/code> etc.
These root servers are few in number (only 13 across the world) and are highly secured.&lt;/p>
&lt;h4 id="the-top-level-domain-name-server">The Top-Level Domain Name Server&lt;/h4>
&lt;p>The next entity that processes the query is the &lt;strong>Top-Level Domain (TLD) Name Server&lt;/strong>.
There are TLDs associated with each domain mentioned in the above section.
For instance, the search for &lt;code>security-summer-school.github.io&lt;/code> will be passed to the TLD responsible for the &lt;code>.io&lt;/code> domain.
This TLD will answer with &lt;code>.io&lt;/code>&amp;rsquo;s IP.&lt;/p>
&lt;h4 id="the-authoritative-name-servers">The Authoritative Name Server(s)&lt;/h4>
&lt;p>The last step in our lookup is &lt;strong>The Authoritative Name Servers&lt;/strong> (sometimes the &amp;ldquo;authoritative&amp;rdquo; part is omitted).
We use the plural &amp;ldquo;servers&amp;rdquo; because our query may be for a subdomain.
In fact, our query for &lt;code>security-summer-school.github&lt;/code> is one such case.
This means, that 2 name servers will fulfill the request.
The first server will fetch the IP of &lt;code>.github.io&lt;/code> and the second will fetch the IP of the whole query (&lt;code>security-summer-school.github.io&lt;/code>), by looking into the subdomains of &lt;code>.github.io&lt;/code>.
This server is symilar to a dictionary, in which a specific domain name is translated into its IP.&lt;/p>
&lt;h4 id="putting-it-together">Putting it Together&lt;/h4>
&lt;p>As you&amp;rsquo;ve probably noticed, the URLs are translated to IPs &lt;em>in reverse order&lt;/em>.
As a result, &lt;code>security-summer-school.github.io&lt;/code> is mapped to its IP in the order:&lt;/p>
&lt;ul>
&lt;li>&lt;code>.io&lt;/code>;&lt;/li>
&lt;li>&lt;code>.github&lt;/code>;&lt;/li>
&lt;li>&lt;code>security-summer-school&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>This makes sense, as this order gradually narrows the &lt;em>scope&lt;/em> in which the URL has to be searched.
It would be much more inefficient to look for &lt;code>security-summer-school&lt;/code> across the whole Internet, rather than limiting the search to the &lt;code>.github.io&lt;/code> domain.
The fact that we are able to perform queries in this manner is proof of the hierarchical nature of IP addresses.&lt;/p>
&lt;p>All in all, the DNS lookup for &lt;code>security-summer-school.github.io&lt;/code> is the one shown below.
Notice that the Recursive Resolver acts as a mediator between most of the DNS lookups.&lt;/p>
&lt;p>&lt;img src="./assets/dns_lookup.png" alt="DNS Lookup for security-summer-school.github.io">&lt;/p>
&lt;p>Notice that only the domain of a URL gets DNS&amp;rsquo;d.
The port, path, parameters and anchor are handled by the web server itself.
The DNS part is, thus, necessary in order to &lt;strong>find&lt;/strong> that web server.&lt;/p>
&lt;h4 id="dig">&lt;code>dig&lt;/code>&lt;/h4>
&lt;p>In the previous section we explained the DNS.
Now let&amp;rsquo;s put what we&amp;rsquo;ve just learned into practice.
In order to query the DNS service, we use the &lt;code>dig&lt;/code> command.&lt;/p>
&lt;p>TODO&lt;/p>
&lt;h2 id="the-transport-layer">The Transport Layer&lt;/h2>
&lt;p>So with IPs, we can connect two hosts however far apart they are.
So far, we managed to directly connect hosts.
Then we moved on to LANs and then to the whole Web.
This must be it, right?
We&amp;rsquo;re now worldwide.
Why all the fuss about the Transport Layer.
Let&amp;rsquo;s run an experiment: in your browser, open two tabs to your favourite website (which is &lt;a href="https://security-summer-school.github.io">https://security-summer-school.github.io&lt;/a>, of course).
How are those connections handled?
How come what you do in one of the tabs does not interfere with what you do in the other?
IPs give us connections from host to host, but they can&amp;rsquo;t differentiate between multiple connections between the same two hosts.&lt;/p>
&lt;p>For this, we need another concept: &lt;strong>ports&lt;/strong>.
The layer that implements these ports is called &lt;strong>the transport layer&lt;/strong>.&lt;/p>
&lt;p>The transport layer is the second layer of the protocol stack and sits immediately below the application layer.
At the transport layer there are two main protocols in use: &lt;strong>Transmission Control Protocol (TCP)&lt;/strong> and &lt;strong>User Datagram Protocol (UDP)&lt;/strong>.
More about them in just a bit.&lt;/p>
&lt;p>The transport layer accepts &lt;strong>messages&lt;/strong> from the application layer as application data.
It does not care if this data is part of the connection setup process, actual data to be transferred, or some other control message.
It just sees the data as a bunch of bytes to be transported to the receiving end&amp;rsquo;s transport layer.&lt;/p>
&lt;h3 id="ports">Ports&lt;/h3>
&lt;p>Generally speaking, ports are endpoints used for communication.
They have no physical correspondent, but are merely logical concepts used to segregate between different processes, all running on the same host.&lt;/p>
&lt;p>A port is a 16-bit number used in order to identify multiple network-using processes &lt;strong>on the same host&lt;/strong>.
Notice that with IPs we were talking about identifying &lt;em>hosts&lt;/em> whereas now we&amp;rsquo;ve increased the granularity and are talking about &lt;em>processes&lt;/em>
As a result, when a sender process wants to connect to another process (the receiver), it must specify both the port it&amp;rsquo;s currently using and the port used by the receiver.&lt;/p>
&lt;p>Since ports are numbers up to &lt;code>2^16&lt;/code>, this means there are 65536 of them.
This number is enough, given that it&amp;rsquo;s meant to encompass the network-using processes in the system.
However, not all of them are available for your average network application.
The &lt;strong>first 1024 (port numbers 0 to 1023)&lt;/strong> of them are reserved common system applications and services.
These ports are unaccessible for the regular apps.&lt;/p>
&lt;h4 id="nmap">&lt;code>nmap&lt;/code>&lt;/h4>
&lt;p>TODO&lt;/p>
&lt;h3 id="tcp">TCP&lt;/h3>
&lt;p>The &amp;ldquo;Control&amp;rdquo; word in this protocol&amp;rsquo;s name should give us a hint that TCP is about handling various errors that may occur while a packet is traversing the Internet.
For this reason, TCP keeps track of the amount of data it sends and ensures it arrives in order (by buffering any out-of-order packets).
This type of tracking is made possible by the use of &lt;strong>sequence numbers (&lt;code>Seq&lt;/code>)&lt;/strong>.
In addition, the receiver sends a special message whenever it gets a segment.
This message is called &lt;strong>acknowledgement (ACK)&lt;/strong>.
Each ACK is sent together with an &lt;strong>ACK number&lt;/strong>.
This number signifies the amount of bytes received so far by the host.
It is used by the sender to figure out what portion of the data to send as part of the next segment.&lt;/p>
&lt;p>&lt;img src="./assets/tcp_ack_model.webp" alt="TCP ACKs in Action">&lt;/p>
&lt;p>In the above diagram we can see that the sender (client) adds some bytes (whose length is specified as &lt;code>Len&lt;/code>) to those already sent.
At the same time, the receiver (server) adds the newly arrived bytes to those received previously and sends this number back to the client as the ACK number.&lt;/p>
&lt;p>But some segment might arrive altered (some of their bits may be changed).
TCP adds what&amp;rsquo;s called a &lt;strong>checksum&lt;/strong> to each packet.
This checksum is computed by &lt;code>xor&lt;/code>-ing all bytes in the segment.
When a segment is received, its checksum is recomputed and compared to the one contained within it.
If the two checksums differ, the receiver notifies the sender by sending a &lt;strong>not ACK (NACK)&lt;/strong> segment instead of an ACK.
Upon receiving a NACK, the sender &lt;strong>retransmits&lt;/strong> the segment.
The same mechanism is employed for segments that do not make it to the receiver.&lt;/p>
&lt;p>In short, TCP makes sure that whatever is sent is received completely and correctly.
This feature is obviously important.
As a result, TCP is used for the transport-layer in the following application-level protocols and scenarios:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>SMTP (Simple Mail Transfer Protocol)&lt;/strong>, &lt;strong>IMAP (Internet Access Message Protocol)&lt;/strong> and &lt;strong>POP3 (Post Office Protocol version 3)&lt;/strong>: the main protocols used by email services worldwide.&lt;/li>
&lt;li>&lt;strong>HTTP/HTTPS (HyperText Transfer Protocol / Secured)&lt;/strong>: the most popular protocol used to transfer web pages.
By default, HTTP uses port 80 and HTTPS uses port 443.&lt;/li>
&lt;li>&lt;strong>SSH (Secure Shell)&lt;/strong>: a widely used protocol for obtaining a remote shell on another machine.&lt;/li>
&lt;/ul>
&lt;h4 id="ssh">SSH&lt;/h4>
&lt;p>We&amp;rsquo;ve been using &lt;code>ssh&lt;/code> to connect to the remote machines used for challenges and tutorials.
Now we know it is a protocol used for connecting to remote hosts via a shell.
It opens a TCP connection to the remote host, where each character typed in the terminal is sent to the receiving host.&lt;/p>
&lt;p>As its name suggests, the gist of this protocol is &lt;strong>secured&lt;/strong>.
The security implies that the characters are not sent to the receiver as plain text, but are &lt;strong>encrypted&lt;/strong>.
While we&amp;rsquo;ll discuss more about encryption in the &lt;a href="../data-security/index.md">Data Security&lt;/a> session, it is important that we outline the main workings of encryption.&lt;/p>
&lt;p>Upon initiating the SSH connection, an encryption algorithm is negociated between the communicating hosts.
This algorithm performs two operations: encryption and decryption&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Encryption&lt;/strong> transforms data (either keys pressed by the sender, or the output from the receiver) into bytes that look random (i.e. one cannot distingush an encrypted text and a random set of bytes).&lt;/li>
&lt;li>&lt;strong>Decryption&lt;/strong> performs the opposite operation: turns encrypted bytes into plain text.&lt;/li>
&lt;/ul>
&lt;p>The typical &lt;code>ssh&lt;/code> command looks like this:&lt;/p>
&lt;pre>&lt;code>$ ssh user@ip
&lt;/code>&lt;/pre>&lt;p>For example:&lt;/p>
&lt;pre>&lt;code>TODO
&lt;/code>&lt;/pre>&lt;p>By default, SSH uses port 22. We can specify another port by using the &lt;code>-p&lt;/code> parameter like so:&lt;/p>
&lt;pre>&lt;code>$ ssh user@ip -p port
&lt;/code>&lt;/pre>&lt;h3 id="udp">UDP&lt;/h3>
&lt;p>We said TCP guarantees the correctness of the delivered data, which is great.
This guarantee, however, comes at the cost of performance.
In the picture above, we saw how ACKs are transmitted.
This mechanism causes a significant temporal overhead, that we sometimes simply cannot afford.
There are services that need to transfer data really fast and, thus, they forgo the need for &lt;strong>datagram&lt;/strong> correctness.
As the protocol&amp;rsquo;s name suggests, UDP messages are called datagrams.
If a received packet is incorrect or if it&amp;rsquo;s missing, well&amp;hellip; too bad.
Life moves on&amp;hellip; to the next packet and so on.
So applications usually simply discard incorrect or missing UDP datagrams.
In case you were wondering, UDP also computes the checksum, but provides no mechanism for error handling.
It&amp;rsquo;s up to the application layer to deal with them.&lt;/p>
&lt;p>In short, with UDP, the sender just sends its datagrams to the receiver.
Some might arrive out of order, or corrupted, but this is entirely the receiver&amp;rsquo;s problem.&lt;/p>
&lt;p>Moreover, with the wide implementation of optical fiber around the world, the possibility of datagrams being lost or corrupted has dropped to almost 0.
For this reason, UDP is mostly used for streaming services:&lt;/p>
&lt;ul>
&lt;li>YouTube&lt;/li>
&lt;li>Netflix&lt;/li>
&lt;li>Discord&lt;/li>
&lt;li>Spotify&lt;/li>
&lt;li>PornHub&lt;/li>
&lt;/ul>
&lt;p>Since an image is worth 1000 words, here&amp;rsquo;s a summary of TCP and UDP:&lt;/p>
&lt;p>&lt;img src="./assets/tcp_vs_udp.jpg" alt="TCP vs UDP">&lt;/p>
&lt;h2 id="the-application-layer">The Application Layer&lt;/h2>
&lt;p>The layer that is the closest to the user, the application layer is also the one that is hardest to define, since it denotes all network applications.
So we&amp;rsquo;ll try to list but a few examples of applications.
We&amp;rsquo;ve already mentioned some of them in the &lt;a href="#tcp">TCP&lt;/a> and &lt;a href="#udp">UDP&lt;/a> sections.&lt;/p>
&lt;p>In essence, every app that you use, and which has anything to do with the Internet, is implemented at the application layer.&lt;/p>
&lt;h3 id="netstat">&lt;code>netstat&lt;/code>&lt;/h3>
&lt;p>Netstat is a complex service used for inspecting various networking-related data.
We&amp;rsquo;ll be using it to list the services running on a host.&lt;/p>
&lt;p>TODO: comenzi&lt;/p>
&lt;h2 id="wrap-up">Wrap-up&lt;/h2>
&lt;p>The network stack up to and including the transport layer is implemented by the kernel of most operating systems.
This passes the burden of handling the lower layers of the TCP/IP stack to the OS, leaving the main logic to the application.
This is also helped by the fact that the protocols at the link, internet and transport layers are highly standardised, while there are no real constraints to how applications define protocols they use internally.&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>We&amp;rsquo;ve used a lot of acronymes during this session.
Here they are explained once more, in case you missed some of them:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>ACK:&lt;/strong> Acknowledgement&lt;/li>
&lt;li>&lt;strong>(D)DoS:&lt;/strong> (Distributed) Denial of Service&lt;/li>
&lt;li>&lt;strong>DHCP:&lt;/strong> Dynamic Host Configuration Protocol&lt;/li>
&lt;li>&lt;strong>DNS:&lt;/strong> Domain Name System&lt;/li>
&lt;li>&lt;strong>HTML:&lt;/strong> HyperText Markup Language&lt;/li>
&lt;li>&lt;strong>HTTP(S):&lt;/strong> HyperText Transfer Protocol (Secured)&lt;/li>
&lt;li>&lt;strong>ICMP:&lt;/strong> Internet Control Message Protocol&lt;/li>
&lt;li>&lt;strong>IMAP:&lt;/strong> Internet Access Message Protocol&lt;/li>
&lt;li>&lt;strong>IP:&lt;/strong> Internet Protocol&lt;/li>
&lt;li>&lt;strong>ISP:&lt;/strong> Internet Service Provider&lt;/li>
&lt;li>&lt;strong>LAN:&lt;/strong> Local Area Network&lt;/li>
&lt;li>&lt;strong>MAC:&lt;/strong> Media Access Control&lt;/li>
&lt;li>&lt;strong>NACK:&lt;/strong> Not Acknowledged&lt;/li>
&lt;li>&lt;strong>NIC:&lt;/strong> Network Interface Card&lt;/li>
&lt;li>&lt;strong>OSI:&lt;/strong> Open Systems Interconnection&lt;/li>
&lt;li>&lt;strong>POP3:&lt;/strong> Post Office Protocol version 3&lt;/li>
&lt;li>&lt;strong>RTT:&lt;/strong> Round-Trip Time&lt;/li>
&lt;li>&lt;strong>SMTP:&lt;/strong> Simple Mail Transfer Protocol&lt;/li>
&lt;li>&lt;strong>SSH:&lt;/strong> Secure Shell&lt;/li>
&lt;li>&lt;strong>TCP:&lt;/strong> Transmission Control Protocol&lt;/li>
&lt;li>&lt;strong>TLD:&lt;/strong> Top-Level Domain&lt;/li>
&lt;li>&lt;strong>UDP:&lt;/strong> User Datagrem Protocol&lt;/li>
&lt;li>&lt;strong>URI:&lt;/strong> Uniform Resource Identifier&lt;/li>
&lt;li>&lt;strong>URL:&lt;/strong> Uniform Resource Locator&lt;/li>
&lt;/ul>
&lt;p>Here&amp;rsquo;s a short summary of the layers of the TCP/IP stack:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Link:&lt;/strong> Provides us with direct connections to other hosts.
Also adds identifiers to NICs in the form of MAC addresses.&lt;/li>
&lt;li>&lt;strong>Internet:&lt;/strong> Provides routing and identifiers for hosts in the Internet, in the form of IP addresses.&lt;/li>
&lt;li>&lt;strong>Transport:&lt;/strong> Provides connections between processes on different hosts by using ports.&lt;/li>
&lt;li>&lt;strong>Application:&lt;/strong> Composes the actual message to be delivered to the receiver.&lt;/li>
&lt;/ul>
&lt;p>Finally, let&amp;rsquo;s map some of the layers of the TCP/IP stack to the CLI tools we use for each of them:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Internet:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>ping&lt;/code>&lt;/li>
&lt;li>&lt;code>dig&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Transport:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>ssh&lt;/code>&lt;/li>
&lt;li>&lt;code>nmap&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Application:&lt;/strong>
&lt;ul>
&lt;li>&lt;code>netstat&lt;/code> (although it has &lt;a href="https://linux.die.net/man/8/netstat">many other uses&lt;/a>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;h3 id="challenge---they-see-me-running">Challenge - They See Me Running:&lt;/h3>
&lt;p>sa dea &lt;code>netstat&lt;/code> ca sa gaseasca servicii.
cumva serviciul ala sa interactioneze cu studentii si sa le ceara ceva input ca sa le dea flagu'.
sa fie ca un quiz&lt;/p>
&lt;h3 id="challenge---connecting-hosts">Challenge - Connecting Hosts:&lt;/h3>
&lt;p>sa fie 2 masini care ruleaza.
sa dea &lt;code>ifup&lt;/code> pe unul dintre ele ca sa mearga ssh pe celalalt&lt;/p>
&lt;h3 id="challenge---ping-service">Challenge - Ping Service:&lt;/h3>
&lt;p>The service can ping any IP by running the follwing command:&lt;/p>
&lt;pre>&lt;code>$ ping -c &amp;lt;your input&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Since your input is given directly to a shell command, you can be creative with how you use it.&lt;/p>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;h3 id="the-osi-stack">The OSI Stack&lt;/h3>
&lt;p>In the session, we discussed the TCP/IP stack, which is implemented by the kernel of every Operating System (Linux included).
In the early days of the Internet, however, another model was popular.
This was the &lt;strong>OSI Model&lt;/strong>.
As a matter of fact, it&amp;rsquo;s still a popular model for teaching about the internet, because it makes a more rigorous separation of what we called the Application Layer.
This layer is split into 3, and the transmission medium is added as a separate physical layer, thus resulting a 7-layer stack.
You can learn about this alternative stack &lt;a href="https://www.imperva.com/learn/application-security/osi-model/">here&lt;/a>, but keep in mind that it is almost never used in practice.&lt;/p>
&lt;h3 id="the-networking-bible">The Networking Bible&lt;/h3>
&lt;p>Speaking of the OSI model, it is paramount that we mention the most influential book in computer networking to this day, namely Andrew Tanenbaum&amp;rsquo;s &lt;a href="http://index-of.es/Varios-2/Computer%20Networks%205th%20Edition.pdf">Computer Networks&lt;/a>.
Dating from 1981 (about the time these stacks were first defined), this book has been the cornerstone of networking ever since. It&amp;rsquo;s a must-read for every netoworking enthusiast.&lt;/p>
&lt;h3 id="icmp">ICMP&lt;/h3>
&lt;p>The protocol used by &lt;code>ping&lt;/code> is called &lt;strong>Internet Control Message Protocol (ICMP)&lt;/strong>.
The protocol defines a set of &lt;em>utility&lt;/em> messages and responses, used by hosts in order to check the status of other hosts.&lt;/p>
&lt;p>There is also a very well-known attack, called &lt;strong>Distributed Denial of Service DDoS&lt;/strong>, by which an attacker floods a server with &lt;code>ping&lt;/code>s essentialy.
The purpose of this attack is to overwhelm the server by making it do nothing else but respond to these &lt;code>pings&lt;/code>, rather than serve the actual requests for which it was designed.
Thus, this type of attack aims to render a server useless, or even make it crash.
The attack has been executed in many forms, with one of the simplest being described &lt;a href="https://www.cloudflare.com/learning/ddos/glossary/internet-control-message-protocol-icmp/">here&lt;/a>.&lt;/p>
&lt;h3 id="url-vs-uri">URL vs URI&lt;/h3>
&lt;p>This session you&amp;rsquo;ve learned about &lt;em>URL&lt;/em>s, but you might have also heard about &lt;em>URI&lt;/em>s.
They&amp;rsquo;re quite similar, but still different.
&lt;a href="https://danielmiessler.com/study/difference-between-uri-url/">Here&lt;/a>&amp;rsquo;s the difference explained.&lt;/p>
&lt;h3 id="ipv6">IPv6&lt;/h3>
&lt;p>Since regular IPs (also known as &lt;strong>IPv4&lt;/strong>) are 32-bit numbers, there are &lt;code>2^32&lt;/code> possible unique IPs.
This number may look large, but it&amp;rsquo;s &lt;em>just&lt;/em> 4,294,967,296, so just upwards of 4 billion.
But the world&amp;rsquo;s population is 7.9 billion as of September 2021, and growing.
The pigeonhole principle tells us there are not enough IPs so that every human can be connected to the Internet at the same time.&lt;/p>
&lt;p>For this reason and some others related to the lack of native security of the IP protocol, a new iteration of IPs was designed: &lt;strong>IPv6&lt;/strong>.
These new IPs are 128-bit numbers.
&lt;code>2^128&lt;/code> is 39 &lt;strong>digits&lt;/strong> long, so it should suffice for the entirety of Earth&amp;rsquo;s population (a few times over).&lt;/p>
&lt;p>For a better (but still short) introduction to IPv6, check out &lt;a href="http://www.steves-internet-guide.com/ipv6-guide/">this&lt;/a> source.&lt;/p>
&lt;h3 id="dhcp">DHCP&lt;/h3>
&lt;p>&lt;strong>Dynamic Host Configuration Protocol (DHCP)&lt;/strong> is a protocol used in order to manage and distribute IP addresses.
Hosts are &lt;em>leased&lt;/em> IP addresses from DHCP servers for some limited amounts of time.
When an address is about to expire, a host can ask the server to extend the lease.
You can read more about DHCP servers &lt;a href="https://www.infoblox.com/glossary/dhcp-server/">here&lt;/a>.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/rediscovering-the-browser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/rediscovering-the-browser/</guid><description>
&lt;h1 id="rediscovering-the-browser">(Re)Discovering the Browser&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;p>Use &lt;a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc&lt;/a>.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Objectives and rationale for the current session.&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Information required for this section&lt;/li>
&lt;li>Commands / snippets that should be known, useful to copy-paste throughout the practical session&lt;/li>
&lt;/ul>
&lt;h2 id="content-sections">Content Sections:&lt;/h2>
&lt;ul>
&lt;li>Content split in sections, according to session specifics&lt;/li>
&lt;li>Demos will be part of the session presentation and will be referenced (snippets, images, links) in the content&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>Sumamrizing session concepts&lt;/li>
&lt;li>Summarizing commands / snippets that are useful for tutorials, challenges (easy reference, copy-paste)&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;p>Tasks for the students to solve. They may be of two types:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Tutorials&lt;/strong> - simpler tasks accompanied by more detailed, walkthrough-like explanations&lt;/li>
&lt;li>&lt;strong>Challenges&lt;/strong> - the good stuff&lt;/li>
&lt;/ul>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>Any links or references to extra information.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/hacking-the-web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/hacking-the-web/</guid><description>
&lt;h1 id="hacking-the-web">Hacking the Web&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;p>Use &lt;a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc&lt;/a>.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Objectives and rationale for the current session.&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Information required for this section&lt;/li>
&lt;li>Commands / snippets that should be known, useful to copy-paste throughout the practical session&lt;/li>
&lt;/ul>
&lt;h2 id="content-sections">Content Sections:&lt;/h2>
&lt;ul>
&lt;li>Content split in sections, according to session specifics&lt;/li>
&lt;li>Demos will be part of the session presentation and will be referenced (snippets, images, links) in the content&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>Sumamrizing session concepts&lt;/li>
&lt;li>Summarizing commands / snippets that are useful for tutorials, challenges (easy reference, copy-paste)&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;p>Tasks for the students to solve. They may be of two types:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Tutorials&lt;/strong> - simpler tasks accompanied by more detailed, walkthrough-like explanations&lt;/li>
&lt;li>&lt;strong>Challenges&lt;/strong> - the good stuff&lt;/li>
&lt;/ul>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>Any links or references to extra information.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/data-representation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/data-representation/</guid><description>
&lt;h1 id="data-representation">Data Representation&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;p>Use &lt;a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc&lt;/a>.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Objectives and rationale for the current session.&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Information required for this section&lt;/li>
&lt;li>Commands / snippets that should be known, useful to copy-paste throughout the practical session&lt;/li>
&lt;/ul>
&lt;h2 id="content-sections">Content Sections:&lt;/h2>
&lt;ul>
&lt;li>Content split in sections, according to session specifics&lt;/li>
&lt;li>Demos will be part of the session presentation and will be referenced (snippets, images, links) in the content&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>Sumamrizing session concepts&lt;/li>
&lt;li>Summarizing commands / snippets that are useful for tutorials, challenges (easy reference, copy-paste)&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;p>Tasks for the students to solve. They may be of two types:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Tutorials&lt;/strong> - simpler tasks accompanied by more detailed, walkthrough-like explanations&lt;/li>
&lt;li>&lt;strong>Challenges&lt;/strong> - the good stuff&lt;/li>
&lt;/ul>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>Any links or references to extra information.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/data-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/data-security/</guid><description>
&lt;h1 id="data-security">Data Security&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;p>Use &lt;a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc&lt;/a>.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Objectives and rationale for the current session.&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Information required for this section&lt;/li>
&lt;li>Commands / snippets that should be known, useful to copy-paste throughout the practical session&lt;/li>
&lt;/ul>
&lt;h2 id="content-sections">Content Sections:&lt;/h2>
&lt;ul>
&lt;li>Content split in sections, according to session specifics&lt;/li>
&lt;li>Demos will be part of the session presentation and will be referenced (snippets, images, links) in the content&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>Sumamrizing session concepts&lt;/li>
&lt;li>Summarizing commands / snippets that are useful for tutorials, challenges (easy reference, copy-paste)&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;p>Tasks for the students to solve. They may be of two types:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Tutorials&lt;/strong> - simpler tasks accompanied by more detailed, walkthrough-like explanations&lt;/li>
&lt;li>&lt;strong>Challenges&lt;/strong> - the good stuff&lt;/li>
&lt;/ul>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>Any links or references to extra information.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/application-lifetime/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/application-lifetime/</guid><description>
&lt;h1 id="application-lifetime">Application Lifetime&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;p>Use &lt;a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc&lt;/a>.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Objectives and rationale for the current session.&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Information required for this section&lt;/li>
&lt;li>Commands / snippets that should be known, useful to copy-paste throughout the practical session&lt;/li>
&lt;/ul>
&lt;h2 id="content-sections">Content Sections:&lt;/h2>
&lt;ul>
&lt;li>Content split in sections, according to session specifics&lt;/li>
&lt;li>Demos will be part of the session presentation and will be referenced (snippets, images, links) in the content&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>Sumamrizing session concepts&lt;/li>
&lt;li>Summarizing commands / snippets that are useful for tutorials, challenges (easy reference, copy-paste)&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;p>Tasks for the students to solve. They may be of two types:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Tutorials&lt;/strong> - simpler tasks accompanied by more detailed, walkthrough-like explanations&lt;/li>
&lt;li>&lt;strong>Challenges&lt;/strong> - the good stuff&lt;/li>
&lt;/ul>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>Any links or references to extra information.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/binary-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/binary-analysis/</guid><description>
&lt;h1 id="binary-analysis">Binary Analysis&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;p>Use &lt;a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc&lt;/a>.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Objectives and rationale for the current session.&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Information required for this section&lt;/li>
&lt;li>Commands / snippets that should be known, useful to copy-paste throughout the practical session&lt;/li>
&lt;/ul>
&lt;h2 id="content-sections">Content Sections:&lt;/h2>
&lt;ul>
&lt;li>Content split in sections, according to session specifics&lt;/li>
&lt;li>Demos will be part of the session presentation and will be referenced (snippets, images, links) in the content&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>Sumamrizing session concepts&lt;/li>
&lt;li>Summarizing commands / snippets that are useful for tutorials, challenges (easy reference, copy-paste)&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;p>Tasks for the students to solve. They may be of two types:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Tutorials&lt;/strong> - simpler tasks accompanied by more detailed, walkthrough-like explanations&lt;/li>
&lt;li>&lt;strong>Challenges&lt;/strong> - the good stuff&lt;/li>
&lt;/ul>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>Any links or references to extra information.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/assembly-language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/assembly-language/</guid><description>
&lt;h1 id="assembly-language">Assembly Language&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;p>Use &lt;a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc&lt;/a>.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Objectives and rationale for the current session.&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Information required for this section&lt;/li>
&lt;li>Commands / snippets that should be known, useful to copy-paste throughout the practical session&lt;/li>
&lt;/ul>
&lt;h2 id="content-sections">Content Sections:&lt;/h2>
&lt;ul>
&lt;li>Content split in sections, according to session specifics&lt;/li>
&lt;li>Demos will be part of the session presentation and will be referenced (snippets, images, links) in the content&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>Sumamrizing session concepts&lt;/li>
&lt;li>Summarizing commands / snippets that are useful for tutorials, challenges (easy reference, copy-paste)&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;p>Tasks for the students to solve. They may be of two types:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Tutorials&lt;/strong> - simpler tasks accompanied by more detailed, walkthrough-like explanations&lt;/li>
&lt;li>&lt;strong>Challenges&lt;/strong> - the good stuff&lt;/li>
&lt;/ul>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>Any links or references to extra information.&lt;/p></description></item><item><title>Essentials:</title><link>/essentials/taming-the-stack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/essentials/taming-the-stack/</guid><description>
&lt;h1 id="taming-the-stack">Taming the Stack&lt;/h1>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;p>Use &lt;a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc&lt;/a>.&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Objectives and rationale for the current session.&lt;/p>
&lt;h2 id="reminders-and-prerequisites">Reminders and Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Information required for this section&lt;/li>
&lt;li>Commands / snippets that should be known, useful to copy-paste throughout the practical session&lt;/li>
&lt;/ul>
&lt;h2 id="content-sections">Content Sections:&lt;/h2>
&lt;ul>
&lt;li>Content split in sections, according to session specifics&lt;/li>
&lt;li>Demos will be part of the session presentation and will be referenced (snippets, images, links) in the content&lt;/li>
&lt;/ul>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>Sumamrizing session concepts&lt;/li>
&lt;li>Summarizing commands / snippets that are useful for tutorials, challenges (easy reference, copy-paste)&lt;/li>
&lt;/ul>
&lt;h2 id="activities">Activities&lt;/h2>
&lt;p>Tasks for the students to solve. They may be of two types:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Tutorials&lt;/strong> - simpler tasks accompanied by more detailed, walkthrough-like explanations&lt;/li>
&lt;li>&lt;strong>Challenges&lt;/strong> - the good stuff&lt;/li>
&lt;/ul>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>Any links or references to extra information.&lt;/p></description></item><item><title>Docs: Example Page</title><link>/docs/getting-started/example-page/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/getting-started/example-page/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre>&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre>&lt;code>foo := &amp;quot;bar&amp;quot;;
bar := &amp;quot;foo&amp;quot;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2>
&lt;p>Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;h3 id="this-document">This Document&lt;/h3>
&lt;p>Inguina genus: Anaphen post: lingua violente voce suae meus aetate diversi. Orbis unam nec flammaeque status deam Silenum erat et a ferrea. Excitus rigidum ait: vestro et Herculis convicia: nitidae deseruit coniuge Proteaque adiciam &lt;em>eripitur&lt;/em>? Sitim noceat signa &lt;em>probat quidem&lt;/em>. Sua longis &lt;em>fugatis&lt;/em> quidem genae.&lt;/p>
&lt;h3 id="pixel-count">Pixel Count&lt;/h3>
&lt;p>Tilde photo booth wayfarers cliche lomo intelligentsia man braid kombucha vaporware farm-to-table mixtape portland. PBR&amp;amp;B pickled cornhole ugh try-hard ethical subway tile. Fixie paleo intelligentsia pabst. Ennui waistcoat vinyl gochujang. Poutine salvia authentic affogato, chambray lumbersexual shabby chic.&lt;/p>
&lt;h3 id="contact-info">Contact Info&lt;/h3>
&lt;p>Plaid hell of cred microdosing, succulents tilde pour-over. Offal shabby chic 3 wolf moon blue bottle raw denim normcore poutine pork belly.&lt;/p>
&lt;h3 id="external-links">External Links&lt;/h3>
&lt;p>Stumptown PBR&amp;amp;B keytar plaid street art, forage XOXO pitchfork selvage affogato green juice listicle pickled everyday carry hashtag. Organic sustainable letterpress sartorial scenester intelligentsia swag bushwick. Put a bird on it stumptown neutra locavore. IPhone typewriter messenger bag narwhal. Ennui cold-pressed seitan flannel keytar, single-origin coffee adaptogen occupy yuccie williamsburg chillwave shoreditch forage waistcoat.&lt;/p>
&lt;pre>&lt;code>This is the final element on the page and there should be no margin below this.
&lt;/code>&lt;/pre></description></item><item><title>Docs: Parameter Reference</title><link>/docs/reference/parameter-reference/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/docs/reference/parameter-reference/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;p>Text can be &lt;strong>bold&lt;/strong>, &lt;em>italic&lt;/em>, or &lt;del>strikethrough&lt;/del>. &lt;a href="https://gohugo.io">Links&lt;/a> should be blue with no underlines (unless hovered over).&lt;/p>
&lt;p>There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p>
&lt;p>90&amp;rsquo;s four loko seitan photo booth gochujang freegan tumeric listicle fam ugh humblebrag. Bespoke leggings gastropub, biodiesel brunch pug fashion axe meh swag art party neutra deep v chia. Enamel pin fanny pack knausgaard tofu, artisan cronut hammock meditation occupy master cleanse chartreuse lumbersexual. Kombucha kogi viral truffaut synth distillery single-origin coffee ugh slow-carb marfa selfies. Pitchfork schlitz semiotics fanny pack, ugh artisan vegan vaporware hexagon. Polaroid fixie post-ironic venmo wolf ramps &lt;strong>kale chips&lt;/strong>.&lt;/p>
&lt;blockquote>
&lt;p>There should be no margin above this first sentence.&lt;/p>
&lt;p>Blockquotes should be a lighter gray with a border along the left side in the secondary color.&lt;/p>
&lt;p>There should be no margin below this final sentence.&lt;/p>
&lt;/blockquote>
&lt;h2 id="first-header-2">First Header 2&lt;/h2>
&lt;p>This is a normal paragraph following a header. Knausgaard kale chips snackwave microdosing cronut copper mug swag synth bitters letterpress glossier &lt;strong>craft beer&lt;/strong>. Mumblecore bushwick authentic gochujang vegan chambray meditation jean shorts irony. Viral farm-to-table kale chips, pork belly palo santo distillery activated charcoal aesthetic jianbing air plant woke lomo VHS organic. Tattooed locavore succulents heirloom, small batch sriracha echo park DIY af. Shaman you probably haven&amp;rsquo;t heard of them copper mug, crucifix green juice vape &lt;em>single-origin coffee&lt;/em> brunch actually. Mustache etsy vexillologist raclette authentic fam. Tousled beard humblebrag asymmetrical. I love turkey, I love my job, I love my friends, I love Chardonnay!&lt;/p>
&lt;p>Deae legum paulatimque terra, non vos mutata tacet: dic. Vocant docuique me plumas fila quin afuerunt copia haec o neque.&lt;/p>
&lt;p>On big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.&lt;/p>
&lt;p>Scenester tumeric pickled, authentic crucifix post-ironic fam freegan VHS pork belly 8-bit yuccie PBR&amp;amp;B. &lt;strong>I love this life we live in&lt;/strong>.&lt;/p>
&lt;h2 id="second-header-2">Second Header 2&lt;/h2>
&lt;blockquote>
&lt;p>This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.&lt;/p>
&lt;/blockquote>
&lt;h3 id="header-3">Header 3&lt;/h3>
&lt;pre>&lt;code>This is a code block following a header.
&lt;/code>&lt;/pre>&lt;p>Next level leggings before they sold out, PBR&amp;amp;B church-key shaman echo park. Kale chips occupy godard whatever pop-up freegan pork belly selfies. Gastropub Belinda subway tile woke post-ironic seitan. Shabby chic man bun semiotics vape, chia messenger bag plaid cardigan.&lt;/p>
&lt;h4 id="header-4">Header 4&lt;/h4>
&lt;ul>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;li>This is an unordered list following a header.&lt;/li>
&lt;/ul>
&lt;h5 id="header-5">Header 5&lt;/h5>
&lt;ol>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;li>This is an ordered list following a header.&lt;/li>
&lt;/ol>
&lt;h6 id="header-6">Header 6&lt;/h6>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>What&lt;/th>
&lt;th>Follows&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A table&lt;/td>
&lt;td>A header&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>There&amp;rsquo;s a horizontal rule above and below this.&lt;/p>
&lt;hr>
&lt;p>Here is an unordered list:&lt;/p>
&lt;ul>
&lt;li>Liverpool F.C.&lt;/li>
&lt;li>Chelsea F.C.&lt;/li>
&lt;li>Manchester United F.C.&lt;/li>
&lt;/ul>
&lt;p>And an ordered list:&lt;/p>
&lt;ol>
&lt;li>Michael Brecker&lt;/li>
&lt;li>Seamus Blake&lt;/li>
&lt;li>Branford Marsalis&lt;/li>
&lt;/ol>
&lt;p>And an unordered task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create a Hugo theme&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add task lists to it&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Take a vacation&lt;/li>
&lt;/ul>
&lt;p>And a &amp;ldquo;mixed&amp;rdquo; task list:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Pack bags&lt;/li>
&lt;li>?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Travel!&lt;/li>
&lt;/ul>
&lt;p>And a nested list:&lt;/p>
&lt;ul>
&lt;li>Jackson 5
&lt;ul>
&lt;li>Michael&lt;/li>
&lt;li>Tito&lt;/li>
&lt;li>Jackie&lt;/li>
&lt;li>Marlon&lt;/li>
&lt;li>Jermaine&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TMNT
&lt;ul>
&lt;li>Leonardo&lt;/li>
&lt;li>Michelangelo&lt;/li>
&lt;li>Donatello&lt;/li>
&lt;li>Raphael&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Definition lists can be used with Markdown syntax. Definition headers are bold.&lt;/p>
&lt;dl>
&lt;dt>Name&lt;/dt>
&lt;dd>Godzilla&lt;/dd>
&lt;dt>Born&lt;/dt>
&lt;dd>1952&lt;/dd>
&lt;dt>Birthplace&lt;/dt>
&lt;dd>Japan&lt;/dd>
&lt;dt>Color&lt;/dt>
&lt;dd>Green&lt;/dd>
&lt;/dl>
&lt;hr>
&lt;p>Tables should have bold headings and alternating shaded rows.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>If a table is too wide, it should scroll horizontally.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Artist&lt;/th>
&lt;th>Album&lt;/th>
&lt;th>Year&lt;/th>
&lt;th>Label&lt;/th>
&lt;th>Awards&lt;/th>
&lt;th>Songs&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Michael Jackson&lt;/td>
&lt;td>Thriller&lt;/td>
&lt;td>1982&lt;/td>
&lt;td>Epic Records&lt;/td>
&lt;td>Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical&lt;/td>
&lt;td>Wanna Be Startin' Somethin', Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prince&lt;/td>
&lt;td>Purple Rain&lt;/td>
&lt;td>1984&lt;/td>
&lt;td>Warner Brothers Records&lt;/td>
&lt;td>Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R&amp;amp;B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal&lt;/td>
&lt;td>Let&amp;rsquo;s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I&amp;rsquo;m a Star, Purple Rain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Beastie Boys&lt;/td>
&lt;td>License to Ill&lt;/td>
&lt;td>1986&lt;/td>
&lt;td>Mercury Records&lt;/td>
&lt;td>noawardsbutthistablecelliswide&lt;/td>
&lt;td>Rhymin &amp;amp; Stealin, The New Style, She&amp;rsquo;s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Code snippets like &lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code> can be shown inline.&lt;/p>
&lt;p>Also, &lt;code>this should vertically align&lt;/code> &lt;del>&lt;code>with this&lt;/code>&lt;/del> &lt;del>and this&lt;/del>.&lt;/p>
&lt;p>Code can also be shown in a block element.&lt;/p>
&lt;pre>&lt;code>foo := &amp;quot;bar&amp;quot;;
bar := &amp;quot;foo&amp;quot;;
&lt;/code>&lt;/pre>&lt;p>Code can also use syntax highlighting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">input&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#4e9a06">`var foo = &amp;#34;bar&amp;#34;;`&lt;/span>
&lt;span style="color:#000">lexer&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexers&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;javascript&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">_&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">lexer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tokenise&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">input&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">style&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">styles&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;github&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">formatter&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">:=&lt;/span> &lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">New&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">html&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">WithLineNumbers&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">var&lt;/span> &lt;span style="color:#000">buff&lt;/span> &lt;span style="color:#000">bytes&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Buffer&lt;/span>
&lt;span style="color:#000">formatter&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">style&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">iterator&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">buff&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this.
&lt;/code>&lt;/pre>&lt;p>Inline code inside table cells should still be distinguishable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Language&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Javascript&lt;/td>
&lt;td>&lt;code>var foo = &amp;quot;bar&amp;quot;;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ruby&lt;/td>
&lt;td>&lt;code>foo = &amp;quot;bar&amp;quot;{&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>Small images should be shown at their actual size.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/240px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>Large images should always scale down and fit in the content container.&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg/1024px-Picea_abies_shoot_with_buds%2C_Sogndal%2C_Norway.jpg" alt="">&lt;/p>
&lt;p>&lt;em>The photo above of the Spruce Picea abies shoot with foliage buds: BjÃ¸rn Erik Pedersen, CC-BY-SA.&lt;/em>&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;h3 id="alerts">Alerts&lt;/h3>
&lt;p>
&lt;div class="alert alert-primary" role="alert">
This is an alert.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This is an alert with a title and &lt;strong>Markdown&lt;/strong>.
&lt;/div>
&lt;div class="alert alert-success" role="alert">
This is a successful alert.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
This is a warning.
&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
This is a warning with a title.
&lt;/div>
&lt;/p>
&lt;h2 id="another-heading">Another Heading&lt;/h2></description></item></channel></rss>